// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Soenneker.Telnyx.OpenApiClient.Oauth.Authorize;
using Soenneker.Telnyx.OpenApiClient.Oauth.Consent;
using Soenneker.Telnyx.OpenApiClient.Oauth.Grants;
using Soenneker.Telnyx.OpenApiClient.Oauth.Introspect;
using Soenneker.Telnyx.OpenApiClient.Oauth.Jwks;
using Soenneker.Telnyx.OpenApiClient.Oauth.Register;
using Soenneker.Telnyx.OpenApiClient.Oauth.Token;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Oauth
{
    /// <summary>
    /// Builds and executes requests for operations under \oauth
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class OauthRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The authorize property</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Oauth.Authorize.AuthorizeRequestBuilder Authorize
        {
            get => new global::Soenneker.Telnyx.OpenApiClient.Oauth.Authorize.AuthorizeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The consent property</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Oauth.Consent.ConsentRequestBuilder Consent
        {
            get => new global::Soenneker.Telnyx.OpenApiClient.Oauth.Consent.ConsentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The grants property</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Oauth.Grants.GrantsRequestBuilder Grants
        {
            get => new global::Soenneker.Telnyx.OpenApiClient.Oauth.Grants.GrantsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The introspect property</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Oauth.Introspect.IntrospectRequestBuilder Introspect
        {
            get => new global::Soenneker.Telnyx.OpenApiClient.Oauth.Introspect.IntrospectRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The jwks property</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Oauth.Jwks.JwksRequestBuilder Jwks
        {
            get => new global::Soenneker.Telnyx.OpenApiClient.Oauth.Jwks.JwksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The register property</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Oauth.Register.RegisterRequestBuilder Register
        {
            get => new global::Soenneker.Telnyx.OpenApiClient.Oauth.Register.RegisterRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The token property</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Oauth.Token.TokenRequestBuilder Token
        {
            get => new global::Soenneker.Telnyx.OpenApiClient.Oauth.Token.TokenRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Oauth.OauthRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OauthRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/oauth", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Oauth.OauthRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OauthRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/oauth", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
