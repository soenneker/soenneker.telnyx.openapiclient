// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Telnyx.OpenApiClient.Models;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Ai.Conversations
{
    /// <summary>
    /// Builds and executes requests for operations under \ai\conversations
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ConversationsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Ai.Conversations.ConversationsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ConversationsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/ai/conversations{?created_at*,id*,last_message_at*,limit*,metadata%2D%3Eassistant_id*,metadata%2D%3Etelnyx_agent_target*,metadata%2D%3Etelnyx_conversation_channel*,metadata%2D%3Etelnyx_end_user_target*,name*,or*,order*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Ai.Conversations.ConversationsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ConversationsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/ai/conversations{?created_at*,id*,last_message_at*,limit*,metadata%2D%3Eassistant_id*,metadata%2D%3Etelnyx_agent_target*,metadata%2D%3Etelnyx_conversation_channel*,metadata%2D%3Etelnyx_end_user_target*,name*,or*,order*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieve a list of all AI conversations configured by the user. Supports [PostgREST-style query parameters](https://postgrest.org/en/stable/api.html#horizontal-filtering-rows) for filtering. Examples are included for the standard metadata fields, but you can filter on any field in the metadata JSON object. For example, to filter by a custom field `metadata-&gt;custom_field`, use `metadata-&gt;custom_field=eq.value`.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.ConversationsListData"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Telnyx.OpenApiClient.Models.HTTPValidationError">When receiving a 422 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Telnyx.OpenApiClient.Models.ConversationsListData?> GetAsync(Action<RequestConfiguration<global::Soenneker.Telnyx.OpenApiClient.Ai.Conversations.ConversationsRequestBuilder.ConversationsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Telnyx.OpenApiClient.Models.ConversationsListData> GetAsync(Action<RequestConfiguration<global::Soenneker.Telnyx.OpenApiClient.Ai.Conversations.ConversationsRequestBuilder.ConversationsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "422", global::Soenneker.Telnyx.OpenApiClient.Models.HTTPValidationError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Telnyx.OpenApiClient.Models.ConversationsListData>(requestInfo, global::Soenneker.Telnyx.OpenApiClient.Models.ConversationsListData.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieve a list of all AI conversations configured by the user. Supports [PostgREST-style query parameters](https://postgrest.org/en/stable/api.html#horizontal-filtering-rows) for filtering. Examples are included for the standard metadata fields, but you can filter on any field in the metadata JSON object. For example, to filter by a custom field `metadata-&gt;custom_field`, use `metadata-&gt;custom_field=eq.value`.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Soenneker.Telnyx.OpenApiClient.Ai.Conversations.ConversationsRequestBuilder.ConversationsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Soenneker.Telnyx.OpenApiClient.Ai.Conversations.ConversationsRequestBuilder.ConversationsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Ai.Conversations.ConversationsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Telnyx.OpenApiClient.Ai.Conversations.ConversationsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Telnyx.OpenApiClient.Ai.Conversations.ConversationsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieve a list of all AI conversations configured by the user. Supports [PostgREST-style query parameters](https://postgrest.org/en/stable/api.html#horizontal-filtering-rows) for filtering. Examples are included for the standard metadata fields, but you can filter on any field in the metadata JSON object. For example, to filter by a custom field `metadata-&gt;custom_field`, use `metadata-&gt;custom_field=eq.value`.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ConversationsRequestBuilderGetQueryParameters 
        {
            /// <summary>Filter by creation datetime (e.g., created_at=gte.2025-01-01)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("created_at")]
            public string? CreatedAt { get; set; }
#nullable restore
#else
            [QueryParameter("created_at")]
            public string CreatedAt { get; set; }
#endif
            /// <summary>Filter by conversation ID (e.g. id=eq.123)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("id")]
            public string? Id { get; set; }
#nullable restore
#else
            [QueryParameter("id")]
            public string Id { get; set; }
#endif
            /// <summary>Filter by last message datetime (e.g., last_message_at=lte.2025-06-01)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("last_message_at")]
            public string? LastMessageAt { get; set; }
#nullable restore
#else
            [QueryParameter("last_message_at")]
            public string LastMessageAt { get; set; }
#endif
            /// <summary>Limit the number of returned conversations (e.g., limit=10)</summary>
            [QueryParameter("limit")]
            public int? Limit { get; set; }
            /// <summary>Filter by assistant ID (e.g., metadata-&gt;assistant_id=eq.assistant-123)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("metadata%2D%3Eassistant_id")]
            public string? MetadataassistantId { get; set; }
#nullable restore
#else
            [QueryParameter("metadata%2D%3Eassistant_id")]
            public string MetadataassistantId { get; set; }
#endif
            /// <summary>Filter by the phone number, SIP URI, or other identifier for the agent (e.g., metadata-&gt;telnyx_agent_target=eq.+13128675309)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("metadata%2D%3Etelnyx_agent_target")]
            public string? MetadatatelnyxAgentTarget { get; set; }
#nullable restore
#else
            [QueryParameter("metadata%2D%3Etelnyx_agent_target")]
            public string MetadatatelnyxAgentTarget { get; set; }
#endif
            /// <summary>Filter by conversation channel (e.g., metadata-&gt;telnyx_conversation_channel=eq.phone_call)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("metadata%2D%3Etelnyx_conversation_channel")]
            public string? MetadatatelnyxConversationChannel { get; set; }
#nullable restore
#else
            [QueryParameter("metadata%2D%3Etelnyx_conversation_channel")]
            public string MetadatatelnyxConversationChannel { get; set; }
#endif
            /// <summary>Filter by the phone number, SIP URI, or other identifier for the end user (e.g., metadata-&gt;telnyx_end_user_target=eq.+13128675309)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("metadata%2D%3Etelnyx_end_user_target")]
            public string? MetadatatelnyxEndUserTarget { get; set; }
#nullable restore
#else
            [QueryParameter("metadata%2D%3Etelnyx_end_user_target")]
            public string MetadatatelnyxEndUserTarget { get; set; }
#endif
            /// <summary>Filter by conversation Name (e.g. name=like.Voice%)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("name")]
            public string? Name { get; set; }
#nullable restore
#else
            [QueryParameter("name")]
            public string Name { get; set; }
#endif
            /// <summary>Apply OR conditions using PostgREST syntax (e.g., or=(created_at.gte.2025-04-01,last_message_at.gte.2025-04-01))</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("or")]
            public string? Or { get; set; }
#nullable restore
#else
            [QueryParameter("or")]
            public string Or { get; set; }
#endif
            /// <summary>Order the results by specific fields (e.g., order=created_at.desc or order=last_message_at.asc)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("order")]
            public string? Order { get; set; }
#nullable restore
#else
            [QueryParameter("order")]
            public string Order { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ConversationsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Soenneker.Telnyx.OpenApiClient.Ai.Conversations.ConversationsRequestBuilder.ConversationsRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
