// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PhoneNumber : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The bundle_id property</summary>
        public Guid? BundleId { get; private set; }
        /// <summary>Country code of the phone number</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CountryCode { get; private set; }
#nullable restore
#else
        public string CountryCode { get; private set; }
#endif
        /// <summary>The ISO 3166-1 alpha-2 country code of the phone number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CountryIsoAlpha2 { get; private set; }
#nullable restore
#else
        public string CountryIsoAlpha2 { get; private set; }
#endif
        /// <summary>The id property</summary>
        public Guid? Id { get; private set; }
        /// <summary>The phone_number property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PhoneNumberProp { get; set; }
#nullable restore
#else
        public string PhoneNumberProp { get; set; }
#endif
        /// <summary>Phone number type</summary>
        public global::Soenneker.Telnyx.Models.PhoneNumber_phone_number_type? PhoneNumberType { get; private set; }
        /// <summary>The record_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecordType { get; private set; }
#nullable restore
#else
        public string RecordType { get; private set; }
#endif
        /// <summary>The regulatory_requirements property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Telnyx.Models.SubNumberOrderRegulatoryRequirementWithValue>? RegulatoryRequirements { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Telnyx.Models.SubNumberOrderRegulatoryRequirementWithValue> RegulatoryRequirements { get; set; }
#endif
        /// <summary>True if all requirements are met for a phone number, false otherwise.</summary>
        public bool? RequirementsMet { get; private set; }
        /// <summary>Status of document requirements (if applicable)</summary>
        public global::Soenneker.Telnyx.Models.PhoneNumber_requirements_status? RequirementsStatus { get; private set; }
        /// <summary>The status of the phone number in the order.</summary>
        public global::Soenneker.Telnyx.Models.PhoneNumber_status? Status { get; private set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.Models.PhoneNumber"/> and sets the default values.
        /// </summary>
        public PhoneNumber()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.Models.PhoneNumber"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.Models.PhoneNumber CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.Models.PhoneNumber();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bundle_id", n => { BundleId = n.GetGuidValue(); } },
                { "country_code", n => { CountryCode = n.GetStringValue(); } },
                { "country_iso_alpha2", n => { CountryIsoAlpha2 = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "phone_number", n => { PhoneNumberProp = n.GetStringValue(); } },
                { "phone_number_type", n => { PhoneNumberType = n.GetEnumValue<global::Soenneker.Telnyx.Models.PhoneNumber_phone_number_type>(); } },
                { "record_type", n => { RecordType = n.GetStringValue(); } },
                { "regulatory_requirements", n => { RegulatoryRequirements = n.GetCollectionOfObjectValues<global::Soenneker.Telnyx.Models.SubNumberOrderRegulatoryRequirementWithValue>(global::Soenneker.Telnyx.Models.SubNumberOrderRegulatoryRequirementWithValue.CreateFromDiscriminatorValue)?.AsList(); } },
                { "requirements_met", n => { RequirementsMet = n.GetBoolValue(); } },
                { "requirements_status", n => { RequirementsStatus = n.GetEnumValue<global::Soenneker.Telnyx.Models.PhoneNumber_requirements_status>(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Telnyx.Models.PhoneNumber_status>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("phone_number", PhoneNumberProp);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Telnyx.Models.SubNumberOrderRegulatoryRequirementWithValue>("regulatory_requirements", RegulatoryRequirements);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
