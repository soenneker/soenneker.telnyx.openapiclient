// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RoomRecording : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Shows the codec used for the room recording.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Codec { get; set; }
#nullable restore
#else
        public string Codec { get; set; }
#endif
        /// <summary>ISO 8601 timestamp when the room recording has completed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompletedAt { get; set; }
#nullable restore
#else
        public string CompletedAt { get; set; }
#endif
        /// <summary>ISO 8601 timestamp when the room recording was created.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>Url to download the recording.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DownloadUrl { get; set; }
#nullable restore
#else
        public string DownloadUrl { get; set; }
#endif
        /// <summary>Shows the room recording duration in seconds.</summary>
        public int? DurationSecs { get; set; }
        /// <summary>ISO 8601 timestamp when the room recording has ended.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndedAt { get; set; }
#nullable restore
#else
        public string EndedAt { get; set; }
#endif
        /// <summary>A unique identifier for the room recording.</summary>
        public Guid? Id { get; set; }
        /// <summary>Identify the room participant associated with the room recording.</summary>
        public Guid? ParticipantId { get; set; }
        /// <summary>The record_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecordType { get; private set; }
#nullable restore
#else
        public string RecordType { get; private set; }
#endif
        /// <summary>Identify the room associated with the room recording.</summary>
        public Guid? RoomId { get; set; }
        /// <summary>Identify the room session associated with the room recording.</summary>
        public Guid? SessionId { get; set; }
        /// <summary>Shows the room recording size in MB.</summary>
        public float? SizeMb { get; set; }
        /// <summary>ISO 8601 timestamp when the room recording has stated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartedAt { get; set; }
#nullable restore
#else
        public string StartedAt { get; set; }
#endif
        /// <summary>Shows the room recording status.</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.RoomRecording_status? Status { get; set; }
        /// <summary>Shows the room recording type.</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.RoomRecording_type? Type { get; set; }
        /// <summary>ISO 8601 timestamp when the room recording was updated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedAt { get; set; }
#nullable restore
#else
        public string UpdatedAt { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.RoomRecording"/> and sets the default values.
        /// </summary>
        public RoomRecording()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.RoomRecording"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.RoomRecording CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.RoomRecording();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "codec", n => { Codec = n.GetStringValue(); } },
                { "completed_at", n => { CompletedAt = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetStringValue(); } },
                { "download_url", n => { DownloadUrl = n.GetStringValue(); } },
                { "duration_secs", n => { DurationSecs = n.GetIntValue(); } },
                { "ended_at", n => { EndedAt = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "participant_id", n => { ParticipantId = n.GetGuidValue(); } },
                { "record_type", n => { RecordType = n.GetStringValue(); } },
                { "room_id", n => { RoomId = n.GetGuidValue(); } },
                { "session_id", n => { SessionId = n.GetGuidValue(); } },
                { "size_mb", n => { SizeMb = n.GetFloatValue(); } },
                { "started_at", n => { StartedAt = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.RoomRecording_status>(); } },
                { "type", n => { Type = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.RoomRecording_type>(); } },
                { "updated_at", n => { UpdatedAt = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("codec", Codec);
            writer.WriteStringValue("completed_at", CompletedAt);
            writer.WriteStringValue("created_at", CreatedAt);
            writer.WriteStringValue("download_url", DownloadUrl);
            writer.WriteIntValue("duration_secs", DurationSecs);
            writer.WriteStringValue("ended_at", EndedAt);
            writer.WriteGuidValue("id", Id);
            writer.WriteGuidValue("participant_id", ParticipantId);
            writer.WriteGuidValue("room_id", RoomId);
            writer.WriteGuidValue("session_id", SessionId);
            writer.WriteFloatValue("size_mb", SizeMb);
            writer.WriteStringValue("started_at", StartedAt);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.RoomRecording_status>("status", Status);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.RoomRecording_type>("type", Type);
            writer.WriteStringValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
