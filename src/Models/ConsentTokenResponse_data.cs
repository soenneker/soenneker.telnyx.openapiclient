// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ConsentTokenResponse_data : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Client ID</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClientId { get; set; }
#nullable restore
#else
        public string ClientId { get; set; }
#endif
        /// <summary>URL of the client logo</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LogoUri { get; set; }
#nullable restore
#else
        public string LogoUri { get; set; }
#endif
        /// <summary>Client name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>URL of the client&apos;s privacy policy</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicyUri { get; set; }
#nullable restore
#else
        public string PolicyUri { get; set; }
#endif
        /// <summary>The redirect URI for this authorization</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RedirectUri { get; set; }
#nullable restore
#else
        public string RedirectUri { get; set; }
#endif
        /// <summary>The requested_scopes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Telnyx.OpenApiClient.Models.ConsentTokenResponse_data_requested_scopes>? RequestedScopes { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Telnyx.OpenApiClient.Models.ConsentTokenResponse_data_requested_scopes> RequestedScopes { get; set; }
#endif
        /// <summary>URL of the client&apos;s terms of service</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TosUri { get; set; }
#nullable restore
#else
        public string TosUri { get; set; }
#endif
        /// <summary>Whether the client is verified</summary>
        public bool? Verified { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.ConsentTokenResponse_data"/> and sets the default values.
        /// </summary>
        public ConsentTokenResponse_data()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.ConsentTokenResponse_data"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.ConsentTokenResponse_data CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.ConsentTokenResponse_data();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "client_id", n => { ClientId = n.GetStringValue(); } },
                { "logo_uri", n => { LogoUri = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "policy_uri", n => { PolicyUri = n.GetStringValue(); } },
                { "redirect_uri", n => { RedirectUri = n.GetStringValue(); } },
                { "requested_scopes", n => { RequestedScopes = n.GetCollectionOfObjectValues<global::Soenneker.Telnyx.OpenApiClient.Models.ConsentTokenResponse_data_requested_scopes>(global::Soenneker.Telnyx.OpenApiClient.Models.ConsentTokenResponse_data_requested_scopes.CreateFromDiscriminatorValue)?.AsList(); } },
                { "tos_uri", n => { TosUri = n.GetStringValue(); } },
                { "verified", n => { Verified = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("client_id", ClientId);
            writer.WriteStringValue("logo_uri", LogoUri);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("policy_uri", PolicyUri);
            writer.WriteStringValue("redirect_uri", RedirectUri);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Telnyx.OpenApiClient.Models.ConsentTokenResponse_data_requested_scopes>("requested_scopes", RequestedScopes);
            writer.WriteStringValue("tos_uri", TosUri);
            writer.WriteBoolValue("verified", Verified);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
