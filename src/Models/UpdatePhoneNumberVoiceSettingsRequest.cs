// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UpdatePhoneNumberVoiceSettingsRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Controls whether the caller ID name is enabled for this phone number.</summary>
        public bool? CallerIdNameEnabled { get; set; }
        /// <summary>The call forwarding settings for a phone number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.Models.CallForwarding? CallForwarding { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.Models.CallForwarding CallForwarding { get; set; }
#endif
        /// <summary>The call recording settings for a phone number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.Models.CallRecording? CallRecording { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.Models.CallRecording CallRecording { get; set; }
#endif
        /// <summary>The CNAM listing settings for a phone number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.Models.CnamListing? CnamListing { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.Models.CnamListing CnamListing { get; set; }
#endif
        /// <summary>The inbound_call_screening setting is a phone number configuration option variable that allows users to configure their settings to block or flag fraudulent calls. It can be set to disabled, reject_calls, or flag_calls. This feature has an additional per-number monthly cost associated with it.</summary>
        public global::Soenneker.Telnyx.Models.UpdatePhoneNumberVoiceSettingsRequest_inbound_call_screening? InboundCallScreening { get; set; }
        /// <summary>The media features settings for a phone number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.Models.MediaFeatures? MediaFeatures { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.Models.MediaFeatures MediaFeatures { get; set; }
#endif
        /// <summary>Controls whether a tech prefix is enabled for this phone number.</summary>
        public bool? TechPrefixEnabled { get; set; }
        /// <summary>This field allows you to rewrite the destination number of an inbound call before the call is routed to you. The value of this field may be any alphanumeric value, and the value will replace the number originally dialed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TranslatedNumber { get; set; }
#nullable restore
#else
        public string TranslatedNumber { get; set; }
#endif
        /// <summary>Controls whether a number is billed per minute or uses your concurrent channels.</summary>
        public global::Soenneker.Telnyx.Models.UpdatePhoneNumberVoiceSettingsRequest_usage_payment_method? UsagePaymentMethod { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.Models.UpdatePhoneNumberVoiceSettingsRequest"/> and sets the default values.
        /// </summary>
        public UpdatePhoneNumberVoiceSettingsRequest()
        {
            AdditionalData = new Dictionary<string, object>();
            InboundCallScreening = global::Soenneker.Telnyx.Models.UpdatePhoneNumberVoiceSettingsRequest_inbound_call_screening.Disabled;
            UsagePaymentMethod = global::Soenneker.Telnyx.Models.UpdatePhoneNumberVoiceSettingsRequest_usage_payment_method.PayPerMinute;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.Models.UpdatePhoneNumberVoiceSettingsRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.Models.UpdatePhoneNumberVoiceSettingsRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.Models.UpdatePhoneNumberVoiceSettingsRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "call_forwarding", n => { CallForwarding = n.GetObjectValue<global::Soenneker.Telnyx.Models.CallForwarding>(global::Soenneker.Telnyx.Models.CallForwarding.CreateFromDiscriminatorValue); } },
                { "call_recording", n => { CallRecording = n.GetObjectValue<global::Soenneker.Telnyx.Models.CallRecording>(global::Soenneker.Telnyx.Models.CallRecording.CreateFromDiscriminatorValue); } },
                { "caller_id_name_enabled", n => { CallerIdNameEnabled = n.GetBoolValue(); } },
                { "cnam_listing", n => { CnamListing = n.GetObjectValue<global::Soenneker.Telnyx.Models.CnamListing>(global::Soenneker.Telnyx.Models.CnamListing.CreateFromDiscriminatorValue); } },
                { "inbound_call_screening", n => { InboundCallScreening = n.GetEnumValue<global::Soenneker.Telnyx.Models.UpdatePhoneNumberVoiceSettingsRequest_inbound_call_screening>(); } },
                { "media_features", n => { MediaFeatures = n.GetObjectValue<global::Soenneker.Telnyx.Models.MediaFeatures>(global::Soenneker.Telnyx.Models.MediaFeatures.CreateFromDiscriminatorValue); } },
                { "tech_prefix_enabled", n => { TechPrefixEnabled = n.GetBoolValue(); } },
                { "translated_number", n => { TranslatedNumber = n.GetStringValue(); } },
                { "usage_payment_method", n => { UsagePaymentMethod = n.GetEnumValue<global::Soenneker.Telnyx.Models.UpdatePhoneNumberVoiceSettingsRequest_usage_payment_method>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("caller_id_name_enabled", CallerIdNameEnabled);
            writer.WriteObjectValue<global::Soenneker.Telnyx.Models.CallForwarding>("call_forwarding", CallForwarding);
            writer.WriteObjectValue<global::Soenneker.Telnyx.Models.CallRecording>("call_recording", CallRecording);
            writer.WriteObjectValue<global::Soenneker.Telnyx.Models.CnamListing>("cnam_listing", CnamListing);
            writer.WriteEnumValue<global::Soenneker.Telnyx.Models.UpdatePhoneNumberVoiceSettingsRequest_inbound_call_screening>("inbound_call_screening", InboundCallScreening);
            writer.WriteObjectValue<global::Soenneker.Telnyx.Models.MediaFeatures>("media_features", MediaFeatures);
            writer.WriteBoolValue("tech_prefix_enabled", TechPrefixEnabled);
            writer.WriteStringValue("translated_number", TranslatedNumber);
            writer.WriteEnumValue<global::Soenneker.Telnyx.Models.UpdatePhoneNumberVoiceSettingsRequest_usage_payment_method>("usage_payment_method", UsagePaymentMethod);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
