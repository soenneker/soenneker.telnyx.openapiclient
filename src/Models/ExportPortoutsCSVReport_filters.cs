// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.Models
{
    /// <summary>
    /// The filters to apply to the export port-out CSV report.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ExportPortoutsCSVReport_filters : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The date and time the port-out was created after.</summary>
        public DateTimeOffset? CreatedAtGt { get; set; }
        /// <summary>The date and time the port-out was created before.</summary>
        public DateTimeOffset? CreatedAtLt { get; set; }
        /// <summary>The customer reference of the port-outs to include in the report.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? CustomerReferenceIn { get; set; }
#nullable restore
#else
        public List<string> CustomerReferenceIn { get; set; }
#endif
        /// <summary>The end user name of the port-outs to include in the report.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndUserName { get; set; }
#nullable restore
#else
        public string EndUserName { get; set; }
#endif
        /// <summary>A list of phone numbers that the port-outs phone numbers must overlap with.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? PhoneNumbersOverlaps { get; set; }
#nullable restore
#else
        public List<string> PhoneNumbersOverlaps { get; set; }
#endif
        /// <summary>The status of the port-outs to include in the report.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Telnyx.Models.ExportPortoutsCSVReport_filters_status__in?>? StatusIn { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Telnyx.Models.ExportPortoutsCSVReport_filters_status__in?> StatusIn { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.Models.ExportPortoutsCSVReport_filters"/> and sets the default values.
        /// </summary>
        public ExportPortoutsCSVReport_filters()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.Models.ExportPortoutsCSVReport_filters"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.Models.ExportPortoutsCSVReport_filters CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.Models.ExportPortoutsCSVReport_filters();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "created_at__gt", n => { CreatedAtGt = n.GetDateTimeOffsetValue(); } },
                { "created_at__lt", n => { CreatedAtLt = n.GetDateTimeOffsetValue(); } },
                { "customer_reference__in", n => { CustomerReferenceIn = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "end_user_name", n => { EndUserName = n.GetStringValue(); } },
                { "phone_numbers__overlaps", n => { PhoneNumbersOverlaps = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "status__in", n => { StatusIn = n.GetCollectionOfEnumValues<global::Soenneker.Telnyx.Models.ExportPortoutsCSVReport_filters_status__in>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("created_at__gt", CreatedAtGt);
            writer.WriteDateTimeOffsetValue("created_at__lt", CreatedAtLt);
            writer.WriteCollectionOfPrimitiveValues<string>("customer_reference__in", CustomerReferenceIn);
            writer.WriteStringValue("end_user_name", EndUserName);
            writer.WriteCollectionOfPrimitiveValues<string>("phone_numbers__overlaps", PhoneNumbersOverlaps);
            writer.WriteCollectionOfEnumValues<global::Soenneker.Telnyx.Models.ExportPortoutsCSVReport_filters_status__in>("status__in", StatusIn);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
