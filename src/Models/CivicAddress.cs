// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CivicAddress : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The city_or_town property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CityOrTown { get; set; }
#nullable restore
#else
        public string CityOrTown { get; set; }
#endif
        /// <summary>The city_or_town_alias property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CityOrTownAlias { get; set; }
#nullable restore
#else
        public string CityOrTownAlias { get; set; }
#endif
        /// <summary>The company_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyName { get; set; }
#nullable restore
#else
        public string CompanyName { get; set; }
#endif
        /// <summary>The country property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>The country_or_district property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CountryOrDistrict { get; set; }
#nullable restore
#else
        public string CountryOrDistrict { get; set; }
#endif
        /// <summary>Identifies what is the default location in the list of locations.</summary>
        public Guid? DefaultLocationId { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The house_number property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HouseNumber { get; set; }
#nullable restore
#else
        public string HouseNumber { get; set; }
#endif
        /// <summary>The house_number_suffix property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HouseNumberSuffix { get; set; }
#nullable restore
#else
        public string HouseNumberSuffix { get; set; }
#endif
        /// <summary>Uniquely identifies the resource.</summary>
        public Guid? Id { get; set; }
        /// <summary>The locations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Telnyx.OpenApiClient.Models.Location>? Locations { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Telnyx.OpenApiClient.Models.Location> Locations { get; set; }
#endif
        /// <summary>The postal_or_zip_code property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostalOrZipCode { get; set; }
#nullable restore
#else
        public string PostalOrZipCode { get; set; }
#endif
        /// <summary>Identifies the type of the resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecordType { get; set; }
#nullable restore
#else
        public string RecordType { get; set; }
#endif
        /// <summary>The state_or_province property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StateOrProvince { get; set; }
#nullable restore
#else
        public string StateOrProvince { get; set; }
#endif
        /// <summary>The street_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StreetName { get; set; }
#nullable restore
#else
        public string StreetName { get; set; }
#endif
        /// <summary>The street_suffix property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StreetSuffix { get; set; }
#nullable restore
#else
        public string StreetSuffix { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.CivicAddress"/> and sets the default values.
        /// </summary>
        public CivicAddress()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.CivicAddress"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.CivicAddress CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.CivicAddress();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "city_or_town", n => { CityOrTown = n.GetStringValue(); } },
                { "city_or_town_alias", n => { CityOrTownAlias = n.GetStringValue(); } },
                { "company_name", n => { CompanyName = n.GetStringValue(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "country_or_district", n => { CountryOrDistrict = n.GetStringValue(); } },
                { "default_location_id", n => { DefaultLocationId = n.GetGuidValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "house_number", n => { HouseNumber = n.GetStringValue(); } },
                { "house_number_suffix", n => { HouseNumberSuffix = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "locations", n => { Locations = n.GetCollectionOfObjectValues<global::Soenneker.Telnyx.OpenApiClient.Models.Location>(global::Soenneker.Telnyx.OpenApiClient.Models.Location.CreateFromDiscriminatorValue)?.AsList(); } },
                { "postal_or_zip_code", n => { PostalOrZipCode = n.GetStringValue(); } },
                { "record_type", n => { RecordType = n.GetStringValue(); } },
                { "state_or_province", n => { StateOrProvince = n.GetStringValue(); } },
                { "street_name", n => { StreetName = n.GetStringValue(); } },
                { "street_suffix", n => { StreetSuffix = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("city_or_town", CityOrTown);
            writer.WriteStringValue("city_or_town_alias", CityOrTownAlias);
            writer.WriteStringValue("company_name", CompanyName);
            writer.WriteStringValue("country", Country);
            writer.WriteStringValue("country_or_district", CountryOrDistrict);
            writer.WriteGuidValue("default_location_id", DefaultLocationId);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("house_number", HouseNumber);
            writer.WriteStringValue("house_number_suffix", HouseNumberSuffix);
            writer.WriteGuidValue("id", Id);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Telnyx.OpenApiClient.Models.Location>("locations", Locations);
            writer.WriteStringValue("postal_or_zip_code", PostalOrZipCode);
            writer.WriteStringValue("record_type", RecordType);
            writer.WriteStringValue("state_or_province", StateOrProvince);
            writer.WriteStringValue("street_name", StreetName);
            writer.WriteStringValue("street_suffix", StreetSuffix);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
