// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.Models
{
    /// <summary>
    /// The webhook payload for the portout.status_changed event
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WebhookPortoutStatusChangedPayload : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The PIN that was attempted to be used to authorize the port out.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AttemptedPin { get; set; }
#nullable restore
#else
        public string AttemptedPin { get; set; }
#endif
        /// <summary>Carrier the number will be ported out to</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CarrierName { get; set; }
#nullable restore
#else
        public string CarrierName { get; set; }
#endif
        /// <summary>Identifies the port out that was moved.</summary>
        public Guid? Id { get; set; }
        /// <summary>Phone numbers associated with this port-out order</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? PhoneNumbers { get; set; }
#nullable restore
#else
        public List<string> PhoneNumbers { get; set; }
#endif
        /// <summary>The reason why the order is being rejected by the user. If the order is authorized, this field can be left null</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RejectionReason { get; set; }
#nullable restore
#else
        public string RejectionReason { get; set; }
#endif
        /// <summary>The new carrier SPID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Spid { get; set; }
#nullable restore
#else
        public string Spid { get; set; }
#endif
        /// <summary>The new status of the port out.</summary>
        public global::Soenneker.Telnyx.Models.WebhookPortoutStatusChangedPayload_status? Status { get; set; }
        /// <summary>The name of the port-out&apos;s end user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubscriberName { get; set; }
#nullable restore
#else
        public string SubscriberName { get; set; }
#endif
        /// <summary>Identifies the user that the port-out order belongs to.</summary>
        public Guid? UserId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.Models.WebhookPortoutStatusChangedPayload"/> and sets the default values.
        /// </summary>
        public WebhookPortoutStatusChangedPayload()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.Models.WebhookPortoutStatusChangedPayload"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.Models.WebhookPortoutStatusChangedPayload CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.Models.WebhookPortoutStatusChangedPayload();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attempted_pin", n => { AttemptedPin = n.GetStringValue(); } },
                { "carrier_name", n => { CarrierName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "phone_numbers", n => { PhoneNumbers = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "rejection_reason", n => { RejectionReason = n.GetStringValue(); } },
                { "spid", n => { Spid = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Telnyx.Models.WebhookPortoutStatusChangedPayload_status>(); } },
                { "subscriber_name", n => { SubscriberName = n.GetStringValue(); } },
                { "user_id", n => { UserId = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("attempted_pin", AttemptedPin);
            writer.WriteStringValue("carrier_name", CarrierName);
            writer.WriteGuidValue("id", Id);
            writer.WriteCollectionOfPrimitiveValues<string>("phone_numbers", PhoneNumbers);
            writer.WriteStringValue("rejection_reason", RejectionReason);
            writer.WriteStringValue("spid", Spid);
            writer.WriteEnumValue<global::Soenneker.Telnyx.Models.WebhookPortoutStatusChangedPayload_status>("status", Status);
            writer.WriteStringValue("subscriber_name", SubscriberName);
            writer.WriteGuidValue("user_id", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
