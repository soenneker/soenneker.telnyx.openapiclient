// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    /// <summary>
    /// Response object for CDR detailed report
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CdrDetailedReqResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>List of call types (Inbound = 1, Outbound = 2)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? CallTypes { get; set; }
#nullable restore
#else
        public List<int?> CallTypes { get; set; }
#endif
        /// <summary>List of connections</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<long?>? Connections { get; set; }
#nullable restore
#else
        public List<long?> Connections { get; set; }
#endif
        /// <summary>Creation date of the report</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>End time in ISO format</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndTime { get; set; }
#nullable restore
#else
        public string EndTime { get; set; }
#endif
        /// <summary>List of filters</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Telnyx.OpenApiClient.Models.Filter>? Filters { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Telnyx.OpenApiClient.Models.Filter> Filters { get; set; }
#endif
        /// <summary>Unique identifier for the report</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>List of managed accounts</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? ManagedAccounts { get; set; }
#nullable restore
#else
        public List<Guid?> ManagedAccounts { get; set; }
#endif
        /// <summary>The record_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecordType { get; set; }
#nullable restore
#else
        public string RecordType { get; set; }
#endif
        /// <summary>List of record types (Complete = 1, Incomplete = 2, Errors = 3)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? RecordTypes { get; set; }
#nullable restore
#else
        public List<int?> RecordTypes { get; set; }
#endif
        /// <summary>Name of the report</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReportName { get; set; }
#nullable restore
#else
        public string ReportName { get; set; }
#endif
        /// <summary>URL to download the report</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReportUrl { get; set; }
#nullable restore
#else
        public string ReportUrl { get; set; }
#endif
        /// <summary>Number of retries</summary>
        public int? Retry { get; set; }
        /// <summary>Source of the report. Valid values: calls (default), call-control, fax-api, webrtc</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Source { get; set; }
#nullable restore
#else
        public string Source { get; set; }
#endif
        /// <summary>Start time in ISO format</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartTime { get; set; }
#nullable restore
#else
        public string StartTime { get; set; }
#endif
        /// <summary>Status of the report (Pending = 1, Complete = 2, Failed = 3, Expired = 4)</summary>
        public int? Status { get; set; }
        /// <summary>Timezone for the report</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Timezone { get; set; }
#nullable restore
#else
        public string Timezone { get; set; }
#endif
        /// <summary>Last update date of the report</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedAt { get; set; }
#nullable restore
#else
        public string UpdatedAt { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.CdrDetailedReqResponse"/> and sets the default values.
        /// </summary>
        public CdrDetailedReqResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.CdrDetailedReqResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.CdrDetailedReqResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.CdrDetailedReqResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "call_types", n => { CallTypes = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "connections", n => { Connections = n.GetCollectionOfPrimitiveValues<long?>()?.AsList(); } },
                { "created_at", n => { CreatedAt = n.GetStringValue(); } },
                { "end_time", n => { EndTime = n.GetStringValue(); } },
                { "filters", n => { Filters = n.GetCollectionOfObjectValues<global::Soenneker.Telnyx.OpenApiClient.Models.Filter>(global::Soenneker.Telnyx.OpenApiClient.Models.Filter.CreateFromDiscriminatorValue)?.AsList(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "managed_accounts", n => { ManagedAccounts = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "record_type", n => { RecordType = n.GetStringValue(); } },
                { "record_types", n => { RecordTypes = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "report_name", n => { ReportName = n.GetStringValue(); } },
                { "report_url", n => { ReportUrl = n.GetStringValue(); } },
                { "retry", n => { Retry = n.GetIntValue(); } },
                { "source", n => { Source = n.GetStringValue(); } },
                { "start_time", n => { StartTime = n.GetStringValue(); } },
                { "status", n => { Status = n.GetIntValue(); } },
                { "timezone", n => { Timezone = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<int?>("call_types", CallTypes);
            writer.WriteCollectionOfPrimitiveValues<long?>("connections", Connections);
            writer.WriteStringValue("created_at", CreatedAt);
            writer.WriteStringValue("end_time", EndTime);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Telnyx.OpenApiClient.Models.Filter>("filters", Filters);
            writer.WriteStringValue("id", Id);
            writer.WriteCollectionOfPrimitiveValues<Guid?>("managed_accounts", ManagedAccounts);
            writer.WriteStringValue("record_type", RecordType);
            writer.WriteCollectionOfPrimitiveValues<int?>("record_types", RecordTypes);
            writer.WriteStringValue("report_name", ReportName);
            writer.WriteStringValue("report_url", ReportUrl);
            writer.WriteIntValue("retry", Retry);
            writer.WriteStringValue("source", Source);
            writer.WriteStringValue("start_time", StartTime);
            writer.WriteIntValue("status", Status);
            writer.WriteStringValue("timezone", Timezone);
            writer.WriteStringValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
