// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class StartConferenceRecordingRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Use this field to avoid duplicate commands. Telnyx will ignore any command with the same `command_id` for the same `conference_id`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CommandId { get; set; }
#nullable restore
#else
        public string CommandId { get; set; }
#endif
        /// <summary>The custom recording file name to be used instead of the default `call_leg_id`. Telnyx will still add a Unix timestamp suffix.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomFileName { get; set; }
#nullable restore
#else
        public string CustomFileName { get; set; }
#endif
        /// <summary>The audio file format used when storing the conference recording. Can be either `mp3` or `wav`.</summary>
        public global::Soenneker.Telnyx.Models.StartConferenceRecordingRequest_format? Format { get; set; }
        /// <summary>If enabled, a beep sound will be played at the start of a recording.</summary>
        public bool? PlayBeep { get; set; }
        /// <summary>When set to `trim-silence`, silence will be removed from the beginning and end of the recording.</summary>
        public global::Soenneker.Telnyx.Models.StartConferenceRecordingRequest_trim? Trim { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.Models.StartConferenceRecordingRequest"/> and sets the default values.
        /// </summary>
        public StartConferenceRecordingRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.Models.StartConferenceRecordingRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.Models.StartConferenceRecordingRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.Models.StartConferenceRecordingRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "command_id", n => { CommandId = n.GetStringValue(); } },
                { "custom_file_name", n => { CustomFileName = n.GetStringValue(); } },
                { "format", n => { Format = n.GetEnumValue<global::Soenneker.Telnyx.Models.StartConferenceRecordingRequest_format>(); } },
                { "play_beep", n => { PlayBeep = n.GetBoolValue(); } },
                { "trim", n => { Trim = n.GetEnumValue<global::Soenneker.Telnyx.Models.StartConferenceRecordingRequest_trim>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("command_id", CommandId);
            writer.WriteStringValue("custom_file_name", CustomFileName);
            writer.WriteEnumValue<global::Soenneker.Telnyx.Models.StartConferenceRecordingRequest_format>("format", Format);
            writer.WriteBoolValue("play_beep", PlayBeep);
            writer.WriteEnumValue<global::Soenneker.Telnyx.Models.StartConferenceRecordingRequest_trim>("trim", Trim);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
