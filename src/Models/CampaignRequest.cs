// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    /// <summary>
    /// CampaignRequest object describes the campaign to be submitted via &apos;/campaignBuilder/brand/{brandId}/usecase/{usecase}&apos; operation. It is also used in operations for retrieving status of campaign request and for updating a pending request.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CampaignRequest : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Does message content controlled by affiliate marketing other than the brand?</summary>
        public bool? AffiliateMarketing { get; set; }
        /// <summary>Age gated message content in campaign.</summary>
        public bool? AgeGated { get; set; }
        /// <summary>Campaign subscription auto-renewal option. If set to true, then campaign will automatically renewal at end of billing cycle.</summary>
        public bool? AutoRenewal { get; set; }
        /// <summary>Alphanumeric identifier of the brand associated with this campaign.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BrandId { get; set; }
#nullable restore
#else
        public string BrandId { get; set; }
#endif
        /// <summary>Summary description of this campaign.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>Direct lending or loan arrangement</summary>
        public bool? DirectLending { get; set; }
        /// <summary>Does message generated by the campaign include URL link in SMS?</summary>
        public bool? EmbeddedLink { get; set; }
        /// <summary>Sample of an embedded link that will be sent to subscribers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmbeddedLinkSample { get; set; }
#nullable restore
#else
        public string EmbeddedLinkSample { get; set; }
#endif
        /// <summary>Does message generated by the campaign include phone number in SMS?</summary>
        public bool? EmbeddedPhone { get; set; }
        /// <summary>Subscriber help keywords. Multiple keywords are comma separated without space.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HelpKeywords { get; set; }
#nullable restore
#else
        public string HelpKeywords { get; set; }
#endif
        /// <summary>Help message of the campaign.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HelpMessage { get; set; }
#nullable restore
#else
        public string HelpMessage { get; set; }
#endif
        /// <summary>Message flow description.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MessageFlow { get; set; }
#nullable restore
#else
        public string MessageFlow { get; set; }
#endif
        /// <summary>Submit campaign to given list of MNOs by MNO&apos;s network ID. Default is all MNOs if no value provided.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<int?>? MnoIds { get; set; }
#nullable restore
#else
        public List<int?> MnoIds { get; set; }
#endif
        /// <summary>Does campaign utilize pool of phone numbers?</summary>
        public bool? NumberPool { get; set; }
        /// <summary>Subscriber opt-in keywords. Multiple keywords are comma separated without space.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OptinKeywords { get; set; }
#nullable restore
#else
        public string OptinKeywords { get; set; }
#endif
        /// <summary>Subscriber opt-in message.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OptinMessage { get; set; }
#nullable restore
#else
        public string OptinMessage { get; set; }
#endif
        /// <summary>Subscriber opt-out keywords. Multiple keywords are comma separated without space.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OptoutKeywords { get; set; }
#nullable restore
#else
        public string OptoutKeywords { get; set; }
#endif
        /// <summary>Subscriber opt-out message.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OptoutMessage { get; set; }
#nullable restore
#else
        public string OptoutMessage { get; set; }
#endif
        /// <summary>Link to the campaign&apos;s privacy policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrivacyPolicyLink { get; set; }
#nullable restore
#else
        public string PrivacyPolicyLink { get; set; }
#endif
        /// <summary>Caller supplied campaign reference ID. If supplied, the value must be unique across all submitted campaigns. Can be used to prevent duplicate campaign registrations.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReferenceId { get; set; }
#nullable restore
#else
        public string ReferenceId { get; set; }
#endif
        /// <summary>Alphanumeric identifier of the reseller that you want to associate with this campaign.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResellerId { get; set; }
#nullable restore
#else
        public string ResellerId { get; set; }
#endif
        /// <summary>Message sample. Some campaign tiers require 1 or more message samples.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sample1 { get; set; }
#nullable restore
#else
        public string Sample1 { get; set; }
#endif
        /// <summary>Message sample. Some campaign tiers require 2 or more message samples.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sample2 { get; set; }
#nullable restore
#else
        public string Sample2 { get; set; }
#endif
        /// <summary>Message sample. Some campaign tiers require 3 or more message samples.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sample3 { get; set; }
#nullable restore
#else
        public string Sample3 { get; set; }
#endif
        /// <summary>Message sample. Some campaign tiers require 4 or more message samples.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sample4 { get; set; }
#nullable restore
#else
        public string Sample4 { get; set; }
#endif
        /// <summary>Message sample. Some campaign tiers require 5 or more message samples.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sample5 { get; set; }
#nullable restore
#else
        public string Sample5 { get; set; }
#endif
        /// <summary>Does campaign responds to help keyword(s)?</summary>
        public bool? SubscriberHelp { get; set; }
        /// <summary>Does campaign require subscriber to opt-in before SMS is sent to subscriber?</summary>
        public bool? SubscriberOptin { get; set; }
        /// <summary>Does campaign support subscriber opt-out keyword(s)?</summary>
        public bool? SubscriberOptout { get; set; }
        /// <summary>Campaign sub-usecases. Must be of defined valid sub-usecase types. Use `/registry/enum/usecase` operation to retrieve list of valid sub-usecases</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SubUsecases { get; set; }
#nullable restore
#else
        public List<string> SubUsecases { get; set; }
#endif
        /// <summary>Tags to be set on the Campaign.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tag { get; set; }
#nullable restore
#else
        public List<string> Tag { get; set; }
#endif
        /// <summary>Is terms and conditions accepted?</summary>
        public bool? TermsAndConditions { get; set; }
        /// <summary>Link to the campaign&apos;s terms and conditions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TermsAndConditionsLink { get; set; }
#nullable restore
#else
        public string TermsAndConditionsLink { get; set; }
#endif
        /// <summary>Campaign usecase. Must be of defined valid types. Use `/registry/enum/usecase` operation to retrieve usecases available for given brand.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Usecase { get; set; }
#nullable restore
#else
        public string Usecase { get; set; }
#endif
        /// <summary>Failover webhook to which campaign status updates are sent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebhookFailoverURL { get; set; }
#nullable restore
#else
        public string WebhookFailoverURL { get; set; }
#endif
        /// <summary>Webhook to which campaign status updates are sent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebhookURL { get; set; }
#nullable restore
#else
        public string WebhookURL { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.CampaignRequest"/> and sets the default values.
        /// </summary>
        public CampaignRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.CampaignRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.CampaignRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.CampaignRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "affiliateMarketing", n => { AffiliateMarketing = n.GetBoolValue(); } },
                { "ageGated", n => { AgeGated = n.GetBoolValue(); } },
                { "autoRenewal", n => { AutoRenewal = n.GetBoolValue(); } },
                { "brandId", n => { BrandId = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "directLending", n => { DirectLending = n.GetBoolValue(); } },
                { "embeddedLink", n => { EmbeddedLink = n.GetBoolValue(); } },
                { "embeddedLinkSample", n => { EmbeddedLinkSample = n.GetStringValue(); } },
                { "embeddedPhone", n => { EmbeddedPhone = n.GetBoolValue(); } },
                { "helpKeywords", n => { HelpKeywords = n.GetStringValue(); } },
                { "helpMessage", n => { HelpMessage = n.GetStringValue(); } },
                { "messageFlow", n => { MessageFlow = n.GetStringValue(); } },
                { "mnoIds", n => { MnoIds = n.GetCollectionOfPrimitiveValues<int?>()?.AsList(); } },
                { "numberPool", n => { NumberPool = n.GetBoolValue(); } },
                { "optinKeywords", n => { OptinKeywords = n.GetStringValue(); } },
                { "optinMessage", n => { OptinMessage = n.GetStringValue(); } },
                { "optoutKeywords", n => { OptoutKeywords = n.GetStringValue(); } },
                { "optoutMessage", n => { OptoutMessage = n.GetStringValue(); } },
                { "privacyPolicyLink", n => { PrivacyPolicyLink = n.GetStringValue(); } },
                { "referenceId", n => { ReferenceId = n.GetStringValue(); } },
                { "resellerId", n => { ResellerId = n.GetStringValue(); } },
                { "sample1", n => { Sample1 = n.GetStringValue(); } },
                { "sample2", n => { Sample2 = n.GetStringValue(); } },
                { "sample3", n => { Sample3 = n.GetStringValue(); } },
                { "sample4", n => { Sample4 = n.GetStringValue(); } },
                { "sample5", n => { Sample5 = n.GetStringValue(); } },
                { "subUsecases", n => { SubUsecases = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "subscriberHelp", n => { SubscriberHelp = n.GetBoolValue(); } },
                { "subscriberOptin", n => { SubscriberOptin = n.GetBoolValue(); } },
                { "subscriberOptout", n => { SubscriberOptout = n.GetBoolValue(); } },
                { "tag", n => { Tag = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "termsAndConditions", n => { TermsAndConditions = n.GetBoolValue(); } },
                { "termsAndConditionsLink", n => { TermsAndConditionsLink = n.GetStringValue(); } },
                { "usecase", n => { Usecase = n.GetStringValue(); } },
                { "webhookFailoverURL", n => { WebhookFailoverURL = n.GetStringValue(); } },
                { "webhookURL", n => { WebhookURL = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("affiliateMarketing", AffiliateMarketing);
            writer.WriteBoolValue("ageGated", AgeGated);
            writer.WriteBoolValue("autoRenewal", AutoRenewal);
            writer.WriteStringValue("brandId", BrandId);
            writer.WriteStringValue("description", Description);
            writer.WriteBoolValue("directLending", DirectLending);
            writer.WriteBoolValue("embeddedLink", EmbeddedLink);
            writer.WriteStringValue("embeddedLinkSample", EmbeddedLinkSample);
            writer.WriteBoolValue("embeddedPhone", EmbeddedPhone);
            writer.WriteStringValue("helpKeywords", HelpKeywords);
            writer.WriteStringValue("helpMessage", HelpMessage);
            writer.WriteStringValue("messageFlow", MessageFlow);
            writer.WriteCollectionOfPrimitiveValues<int?>("mnoIds", MnoIds);
            writer.WriteBoolValue("numberPool", NumberPool);
            writer.WriteStringValue("optinKeywords", OptinKeywords);
            writer.WriteStringValue("optinMessage", OptinMessage);
            writer.WriteStringValue("optoutKeywords", OptoutKeywords);
            writer.WriteStringValue("optoutMessage", OptoutMessage);
            writer.WriteStringValue("privacyPolicyLink", PrivacyPolicyLink);
            writer.WriteStringValue("referenceId", ReferenceId);
            writer.WriteStringValue("resellerId", ResellerId);
            writer.WriteStringValue("sample1", Sample1);
            writer.WriteStringValue("sample2", Sample2);
            writer.WriteStringValue("sample3", Sample3);
            writer.WriteStringValue("sample4", Sample4);
            writer.WriteStringValue("sample5", Sample5);
            writer.WriteBoolValue("subscriberHelp", SubscriberHelp);
            writer.WriteBoolValue("subscriberOptin", SubscriberOptin);
            writer.WriteBoolValue("subscriberOptout", SubscriberOptout);
            writer.WriteCollectionOfPrimitiveValues<string>("subUsecases", SubUsecases);
            writer.WriteCollectionOfPrimitiveValues<string>("tag", Tag);
            writer.WriteBoolValue("termsAndConditions", TermsAndConditions);
            writer.WriteStringValue("termsAndConditionsLink", TermsAndConditionsLink);
            writer.WriteStringValue("usecase", Usecase);
            writer.WriteStringValue("webhookFailoverURL", WebhookFailoverURL);
            writer.WriteStringValue("webhookURL", WebhookURL);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
