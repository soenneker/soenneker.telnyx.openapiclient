// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PortingOrderEndUserAdmin : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The authorized person&apos;s account number with the current service provider</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountNumber { get; set; }
#nullable restore
#else
        public string AccountNumber { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Name of person authorizing the porting order</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthPersonName { get; set; }
#nullable restore
#else
        public string AuthPersonName { get; set; }
#endif
        /// <summary>Billing phone number associated with these phone numbers</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BillingPhoneNumber { get; set; }
#nullable restore
#else
        public string BillingPhoneNumber { get; set; }
#endif
        /// <summary>European business identification number. Applicable only in the European Union</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BusinessIdentifier { get; set; }
#nullable restore
#else
        public string BusinessIdentifier { get; set; }
#endif
        /// <summary>Person Name or Company name requesting the port</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EntityName { get; set; }
#nullable restore
#else
        public string EntityName { get; set; }
#endif
        /// <summary>PIN/passcode possibly required by the old service provider for extra verification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PinPasscode { get; set; }
#nullable restore
#else
        public string PinPasscode { get; set; }
#endif
        /// <summary>European tax identification number. Applicable only in the European Union</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TaxIdentifier { get; set; }
#nullable restore
#else
        public string TaxIdentifier { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.PortingOrderEndUserAdmin"/> and sets the default values.
        /// </summary>
        public PortingOrderEndUserAdmin()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.PortingOrderEndUserAdmin"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.PortingOrderEndUserAdmin CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.PortingOrderEndUserAdmin();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_number", n => { AccountNumber = n.GetStringValue(); } },
                { "auth_person_name", n => { AuthPersonName = n.GetStringValue(); } },
                { "billing_phone_number", n => { BillingPhoneNumber = n.GetStringValue(); } },
                { "business_identifier", n => { BusinessIdentifier = n.GetStringValue(); } },
                { "entity_name", n => { EntityName = n.GetStringValue(); } },
                { "pin_passcode", n => { PinPasscode = n.GetStringValue(); } },
                { "tax_identifier", n => { TaxIdentifier = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account_number", AccountNumber);
            writer.WriteStringValue("auth_person_name", AuthPersonName);
            writer.WriteStringValue("billing_phone_number", BillingPhoneNumber);
            writer.WriteStringValue("business_identifier", BusinessIdentifier);
            writer.WriteStringValue("entity_name", EntityName);
            writer.WriteStringValue("pin_passcode", PinPasscode);
            writer.WriteStringValue("tax_identifier", TaxIdentifier);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
