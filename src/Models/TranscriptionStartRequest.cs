// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TranscriptionStartRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClientState { get; set; }
#nullable restore
#else
        public string ClientState { get; set; }
#endif
        /// <summary>Use this field to avoid duplicate commands. Telnyx will ignore any command with the same `command_id` for the same `call_control_id`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CommandId { get; set; }
#nullable restore
#else
        public string CommandId { get; set; }
#endif
        /// <summary>Engine to use for speech recognition. `A` - `Google`, `B` - `Telnyx`.</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest_transcription_engine? TranscriptionEngine { get; set; }
        /// <summary>The transcription_engine_config property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_transcription_engine_config? TranscriptionEngineConfig { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_transcription_engine_config TranscriptionEngineConfig { get; set; }
#endif
        /// <summary>Indicates which leg of the call will be transcribed. Use `inbound` for the leg that requested the transcription, `outbound` for the other leg, and `both` for both legs of the call. Will default to `inbound`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TranscriptionTracks { get; set; }
#nullable restore
#else
        public string TranscriptionTracks { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest"/> and sets the default values.
        /// </summary>
        public TranscriptionStartRequest()
        {
            AdditionalData = new Dictionary<string, object>();
            TranscriptionEngine = global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest_transcription_engine.A;
            TranscriptionTracks = "inbound";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "client_state", n => { ClientState = n.GetStringValue(); } },
                { "command_id", n => { CommandId = n.GetStringValue(); } },
                { "transcription_engine", n => { TranscriptionEngine = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest_transcription_engine>(); } },
                { "transcription_engine_config", n => { TranscriptionEngineConfig = n.GetObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_transcription_engine_config>(global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_transcription_engine_config.CreateFromDiscriminatorValue); } },
                { "transcription_tracks", n => { TranscriptionTracks = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("client_state", ClientState);
            writer.WriteStringValue("command_id", CommandId);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest_transcription_engine>("transcription_engine", TranscriptionEngine);
            writer.WriteObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_transcription_engine_config>("transcription_engine_config", TranscriptionEngineConfig);
            writer.WriteStringValue("transcription_tracks", TranscriptionTracks);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionEngineAConfig"/>, <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionEngineBConfig"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class TranscriptionStartRequest_transcription_engine_config : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionEngineAConfig"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionEngineAConfig? TranscriptionEngineAConfig { get; set; }
#nullable restore
#else
            public global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionEngineAConfig TranscriptionEngineAConfig { get; set; }
#endif
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionEngineBConfig"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            public global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionEngineBConfig? TranscriptionEngineBConfig { get; set; }
#nullable restore
#else
            public global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionEngineBConfig TranscriptionEngineBConfig { get; set; }
#endif
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_transcription_engine_config"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_transcription_engine_config CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("transcription_engine")?.GetStringValue();
                var result = new global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_transcription_engine_config();
                if("A".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.TranscriptionEngineAConfig = new global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionEngineAConfig();
                }
                else if("B".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
                {
                    result.TranscriptionEngineBConfig = new global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionEngineBConfig();
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                if(TranscriptionEngineAConfig != null)
                {
                    return TranscriptionEngineAConfig.GetFieldDeserializers();
                }
                else if(TranscriptionEngineBConfig != null)
                {
                    return TranscriptionEngineBConfig.GetFieldDeserializers();
                }
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(TranscriptionEngineAConfig != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionEngineAConfig>(null, TranscriptionEngineAConfig);
                }
                else if(TranscriptionEngineBConfig != null)
                {
                    writer.WriteObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionEngineBConfig>(null, TranscriptionEngineBConfig);
                }
            }
        }
    }
}
#pragma warning restore CS0618
