// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TranscriptionStartRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClientState { get; set; }
#nullable restore
#else
        public string ClientState { get; set; }
#endif
        /// <summary>Use this field to avoid duplicate commands. Telnyx will ignore any command with the same `command_id` for the same `call_control_id`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CommandId { get; set; }
#nullable restore
#else
        public string CommandId { get; set; }
#endif
        /// <summary>Enables speaker diarization. Applies to `google` engine only.</summary>
        public bool? EnableSpeakerDiarization { get; set; }
        /// <summary>Whether to send also interim results. If set to false, only final results will be sent. Applies to `google` engine only.</summary>
        public bool? InterimResults { get; set; }
        /// <summary>The language property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_language? Language { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_language Language { get; set; }
#endif
        /// <summary>Defines maximum number of speakers in the conversation. Applies to `google` engine only.</summary>
        public int? MaxSpeakerCount { get; set; }
        /// <summary>Defines minimum number of speakers in the conversation. Applies to `google` engine only.</summary>
        public int? MinSpeakerCount { get; set; }
        /// <summary>Engine to use for speech recognition. `A` - `Google`, `B` - `Telnyx`.</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest_transcription_engine? TranscriptionEngine { get; set; }
        /// <summary>Indicates which leg of the call will be transcribed. Use `inbound` for the leg that requested the transcription, `outbound` for the other leg, and `both` for both legs of the call. Will default to `inbound`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TranscriptionTracks { get; set; }
#nullable restore
#else
        public string TranscriptionTracks { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest"/> and sets the default values.
        /// </summary>
        public TranscriptionStartRequest()
        {
            AdditionalData = new Dictionary<string, object>();
            TranscriptionEngine = global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest_transcription_engine.A;
            TranscriptionTracks = "inbound";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "client_state", n => { ClientState = n.GetStringValue(); } },
                { "command_id", n => { CommandId = n.GetStringValue(); } },
                { "enable_speaker_diarization", n => { EnableSpeakerDiarization = n.GetBoolValue(); } },
                { "interim_results", n => { InterimResults = n.GetBoolValue(); } },
                { "language", n => { Language = n.GetObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_language>(global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_language.CreateFromDiscriminatorValue); } },
                { "max_speaker_count", n => { MaxSpeakerCount = n.GetIntValue(); } },
                { "min_speaker_count", n => { MinSpeakerCount = n.GetIntValue(); } },
                { "transcription_engine", n => { TranscriptionEngine = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest_transcription_engine>(); } },
                { "transcription_tracks", n => { TranscriptionTracks = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("client_state", ClientState);
            writer.WriteStringValue("command_id", CommandId);
            writer.WriteBoolValue("enable_speaker_diarization", EnableSpeakerDiarization);
            writer.WriteBoolValue("interim_results", InterimResults);
            writer.WriteObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_language>("language", Language);
            writer.WriteIntValue("max_speaker_count", MaxSpeakerCount);
            writer.WriteIntValue("min_speaker_count", MinSpeakerCount);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest_transcription_engine>("transcription_engine", TranscriptionEngine);
            writer.WriteStringValue("transcription_tracks", TranscriptionTracks);
            writer.WriteAdditionalData(AdditionalData);
        }
        /// <summary>
        /// Composed type wrapper for classes <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.GoogleTranscriptionLanguage"/>, <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.TelnyxTranscriptionLanguage"/>
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class TranscriptionStartRequest_language : IComposedTypeWrapper, IParsable
        {
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.GoogleTranscriptionLanguage"/></summary>
            public global::Soenneker.Telnyx.OpenApiClient.Models.GoogleTranscriptionLanguage? GoogleTranscriptionLanguage { get; set; }
            /// <summary>Composed type representation for type <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.TelnyxTranscriptionLanguage"/></summary>
            public global::Soenneker.Telnyx.OpenApiClient.Models.TelnyxTranscriptionLanguage? TelnyxTranscriptionLanguage { get; set; }
            /// <summary>
            /// Creates a new instance of the appropriate class based on discriminator value
            /// </summary>
            /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_language"/></returns>
            /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
            public static global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_language CreateFromDiscriminatorValue(IParseNode parseNode)
            {
                _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
                var mappingValue = parseNode.GetChildNode("transcription_engine")?.GetStringValue();
                var result = new global::Soenneker.Telnyx.OpenApiClient.Models.TranscriptionStartRequest.TranscriptionStartRequest_language();
                if(parseNode.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.GoogleTranscriptionLanguage>() is global::Soenneker.Telnyx.OpenApiClient.Models.GoogleTranscriptionLanguage googleTranscriptionLanguageValue)
                {
                    result.GoogleTranscriptionLanguage = googleTranscriptionLanguageValue;
                }
                else if(parseNode.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.TelnyxTranscriptionLanguage>() is global::Soenneker.Telnyx.OpenApiClient.Models.TelnyxTranscriptionLanguage telnyxTranscriptionLanguageValue)
                {
                    result.TelnyxTranscriptionLanguage = telnyxTranscriptionLanguageValue;
                }
                return result;
            }
            /// <summary>
            /// The deserialization information for the current model
            /// </summary>
            /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
            public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
            {
                return new Dictionary<string, Action<IParseNode>>();
            }
            /// <summary>
            /// Serializes information the current object
            /// </summary>
            /// <param name="writer">Serialization writer to use to serialize this model</param>
            public virtual void Serialize(ISerializationWriter writer)
            {
                _ = writer ?? throw new ArgumentNullException(nameof(writer));
                if(GoogleTranscriptionLanguage != null)
                {
                    writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.GoogleTranscriptionLanguage>(null, GoogleTranscriptionLanguage);
                }
                else if(TelnyxTranscriptionLanguage != null)
                {
                    writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.TelnyxTranscriptionLanguage>(null, TelnyxTranscriptionLanguage);
                }
            }
        }
    }
}
#pragma warning restore CS0618
