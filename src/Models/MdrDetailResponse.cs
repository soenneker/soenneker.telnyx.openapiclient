// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MdrDetailResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The destination number for a call, or the callee</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Cld { get; set; }
#nullable restore
#else
        public string Cld { get; set; }
#endif
        /// <summary>The number associated with the person initiating the call, or the caller</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Cli { get; set; }
#nullable restore
#else
        public string Cli { get; set; }
#endif
        /// <summary>Final cost. Cost is calculated as rate * parts</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Cost { get; set; }
#nullable restore
#else
        public string Cost { get; set; }
#endif
        /// <summary>Message sent time</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Currency of the rate and cost</summary>
        public global::Soenneker.Telnyx.Models.MdrDetailResponse_currency? Currency { get; set; }
        /// <summary>Direction of message - inbound or outbound.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Direction { get; set; }
#nullable restore
#else
        public string Direction { get; set; }
#endif
        /// <summary>Id of message detail record</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>Type of message</summary>
        public global::Soenneker.Telnyx.Models.MdrDetailResponse_message_type? MessageType { get; set; }
        /// <summary>Number of parts this message has. Max number of character is 160. If message contains more characters then that it will be broken down in multiple parts</summary>
        public double? Parts { get; set; }
        /// <summary>Configured profile name. New profiles can be created and configured on Telnyx portal</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProfileName { get; set; }
#nullable restore
#else
        public string ProfileName { get; set; }
#endif
        /// <summary>Rate applied to the message</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Rate { get; set; }
#nullable restore
#else
        public string Rate { get; set; }
#endif
        /// <summary>The record_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecordType { get; set; }
#nullable restore
#else
        public string RecordType { get; set; }
#endif
        /// <summary>Message status</summary>
        public global::Soenneker.Telnyx.Models.MdrDetailResponse_status? Status { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.Models.MdrDetailResponse"/> and sets the default values.
        /// </summary>
        public MdrDetailResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.Models.MdrDetailResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.Models.MdrDetailResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.Models.MdrDetailResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cld", n => { Cld = n.GetStringValue(); } },
                { "cli", n => { Cli = n.GetStringValue(); } },
                { "cost", n => { Cost = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "currency", n => { Currency = n.GetEnumValue<global::Soenneker.Telnyx.Models.MdrDetailResponse_currency>(); } },
                { "direction", n => { Direction = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "message_type", n => { MessageType = n.GetEnumValue<global::Soenneker.Telnyx.Models.MdrDetailResponse_message_type>(); } },
                { "parts", n => { Parts = n.GetDoubleValue(); } },
                { "profile_name", n => { ProfileName = n.GetStringValue(); } },
                { "rate", n => { Rate = n.GetStringValue(); } },
                { "record_type", n => { RecordType = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Telnyx.Models.MdrDetailResponse_status>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("cld", Cld);
            writer.WriteStringValue("cli", Cli);
            writer.WriteStringValue("cost", Cost);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteEnumValue<global::Soenneker.Telnyx.Models.MdrDetailResponse_currency>("currency", Currency);
            writer.WriteStringValue("direction", Direction);
            writer.WriteStringValue("id", Id);
            writer.WriteEnumValue<global::Soenneker.Telnyx.Models.MdrDetailResponse_message_type>("message_type", MessageType);
            writer.WriteDoubleValue("parts", Parts);
            writer.WriteStringValue("profile_name", ProfileName);
            writer.WriteStringValue("rate", Rate);
            writer.WriteStringValue("record_type", RecordType);
            writer.WriteEnumValue<global::Soenneker.Telnyx.Models.MdrDetailResponse_status>("status", Status);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
