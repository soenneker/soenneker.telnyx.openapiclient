// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PortingActionRequirement : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The type of action required</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ActionType { get; set; }
#nullable restore
#else
        public string ActionType { get; set; }
#endif
        /// <summary>Optional URL for the action</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ActionUrl { get; set; }
#nullable restore
#else
        public string ActionUrl { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Reason for cancellation if status is &apos;cancelled&apos;</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CancelReason { get; set; }
#nullable restore
#else
        public string CancelReason { get; set; }
#endif
        /// <summary>ISO 8601 formatted date-time indicating when the resource was created</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>Identifies the action requirement</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The ID of the porting order this action requirement belongs to</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PortingOrderId { get; set; }
#nullable restore
#else
        public string PortingOrderId { get; set; }
#endif
        /// <summary>Identifies the type of the resource</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.PortingActionRequirement_record_type? RecordType { get; set; }
        /// <summary>The ID of the requirement type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RequirementTypeId { get; set; }
#nullable restore
#else
        public string RequirementTypeId { get; set; }
#endif
        /// <summary>Current status of the action requirement</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.PortingActionRequirement_status? Status { get; set; }
        /// <summary>ISO 8601 formatted date-time indicating when the resource was updated</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.PortingActionRequirement"/> and sets the default values.
        /// </summary>
        public PortingActionRequirement()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.PortingActionRequirement"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.PortingActionRequirement CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.PortingActionRequirement();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "action_type", n => { ActionType = n.GetStringValue(); } },
                { "action_url", n => { ActionUrl = n.GetStringValue(); } },
                { "cancel_reason", n => { CancelReason = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "porting_order_id", n => { PortingOrderId = n.GetStringValue(); } },
                { "record_type", n => { RecordType = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.PortingActionRequirement_record_type>(); } },
                { "requirement_type_id", n => { RequirementTypeId = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.PortingActionRequirement_status>(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("action_type", ActionType);
            writer.WriteStringValue("action_url", ActionUrl);
            writer.WriteStringValue("cancel_reason", CancelReason);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("porting_order_id", PortingOrderId);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.PortingActionRequirement_record_type>("record_type", RecordType);
            writer.WriteStringValue("requirement_type_id", RequirementTypeId);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.PortingActionRequirement_status>("status", Status);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
