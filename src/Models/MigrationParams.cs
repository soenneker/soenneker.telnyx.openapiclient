// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MigrationParams : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Total amount of data that has been succesfully migrated.</summary>
        public int? BytesMigrated { get; private set; }
        /// <summary>Total amount of data found in source bucket to migrate.</summary>
        public int? BytesToMigrate { get; private set; }
        /// <summary>Time when data migration was created</summary>
        public DateTimeOffset? CreatedAt { get; private set; }
        /// <summary>Estimated time the migration will complete.</summary>
        public DateTimeOffset? Eta { get; private set; }
        /// <summary>Unique identifier for the data migration.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; private set; }
#nullable restore
#else
        public string Id { get; private set; }
#endif
        /// <summary>Time when data migration was last copied from the source.</summary>
        public DateTimeOffset? LastCopy { get; private set; }
        /// <summary>If true, will continue to poll the source bucket to ensure new data is continually migrated over.</summary>
        public bool? Refresh { get; set; }
        /// <summary>ID of the Migration Source from which to migrate data.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SourceId { get; set; }
#nullable restore
#else
        public string SourceId { get; set; }
#endif
        /// <summary>Current speed of the migration.</summary>
        public int? Speed { get; private set; }
        /// <summary>Status of the migration.</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.MigrationParams_status? Status { get; private set; }
        /// <summary>Bucket name to migrate the data into. Will default to the same name as the `source_bucket_name`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TargetBucketName { get; set; }
#nullable restore
#else
        public string TargetBucketName { get; set; }
#endif
        /// <summary>Telnyx Cloud Storage region to migrate the data to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TargetRegion { get; set; }
#nullable restore
#else
        public string TargetRegion { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.MigrationParams"/> and sets the default values.
        /// </summary>
        public MigrationParams()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.MigrationParams"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.MigrationParams CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.MigrationParams();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "bytes_migrated", n => { BytesMigrated = n.GetIntValue(); } },
                { "bytes_to_migrate", n => { BytesToMigrate = n.GetIntValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "eta", n => { Eta = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "last_copy", n => { LastCopy = n.GetDateTimeOffsetValue(); } },
                { "refresh", n => { Refresh = n.GetBoolValue(); } },
                { "source_id", n => { SourceId = n.GetStringValue(); } },
                { "speed", n => { Speed = n.GetIntValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.MigrationParams_status>(); } },
                { "target_bucket_name", n => { TargetBucketName = n.GetStringValue(); } },
                { "target_region", n => { TargetRegion = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("refresh", Refresh);
            writer.WriteStringValue("source_id", SourceId);
            writer.WriteStringValue("target_bucket_name", TargetBucketName);
            writer.WriteStringValue("target_region", TargetRegion);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
