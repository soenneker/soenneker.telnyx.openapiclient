// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MessagingProfile : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The alphanumeric sender ID to use when sending to destinations that require an alphanumeric sender ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AlphaSender { get; set; }
#nullable restore
#else
        public string AlphaSender { get; set; }
#endif
        /// <summary>ISO 8601 formatted date indicating when the resource was created.</summary>
        public DateTimeOffset? CreatedAt { get; private set; }
        /// <summary>The maximum amount of money (in USD) that can be spent by this profile before midnight UTC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DailySpendLimit { get; set; }
#nullable restore
#else
        public string DailySpendLimit { get; set; }
#endif
        /// <summary>Whether to enforce the value configured by `daily_spend_limit`.</summary>
        public bool? DailySpendLimitEnabled { get; set; }
        /// <summary>Specifies whether the messaging profile is enabled or not.</summary>
        public bool? Enabled { get; set; }
        /// <summary>Identifies the type of resource.</summary>
        public Guid? Id { get; private set; }
        /// <summary>enables SMS fallback for MMS messages.</summary>
        public bool? MmsFallBackToSms { get; set; }
        /// <summary>enables automated resizing of MMS media.</summary>
        public bool? MmsTranscoding { get; set; }
        /// <summary>A user friendly name for the messaging profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>Number Pool allows you to send messages from a pool of numbers of different types, assigningweights to each type. The pool consists of all the long code and toll free numbersassigned to the messaging profile.To disable this feature, set the object field to `null`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.Models.NumberPoolSettings? NumberPoolSettings { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.Models.NumberPoolSettings NumberPoolSettings { get; set; }
#endif
        /// <summary>Identifies the type of the resource.</summary>
        public global::Soenneker.Telnyx.Models.MessagingProfile_record_type? RecordType { get; private set; }
        /// <summary>ISO 8601 formatted date indicating when the resource was updated.</summary>
        public DateTimeOffset? UpdatedAt { get; private set; }
        /// <summary>The URL shortener feature allows automatic replacement of URLs that were generated usinga public URL shortener service. Some examples include bit.do, bit.ly, goo.gl, ht.ly,is.gd, ow.ly, rebrand.ly, t.co, tiny.cc, and tinyurl.com. Such URLs are replaced withwith links generated by Telnyx. The use of custom links can improve branding and messagedeliverability.To disable this feature, set the object field to `null`.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.Models.UrlShortenerSettings? UrlShortenerSettings { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.Models.UrlShortenerSettings UrlShortenerSettings { get; set; }
#endif
        /// <summary>Secret used to authenticate with v1 endpoints.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? V1Secret { get; set; }
#nullable restore
#else
        public string V1Secret { get; set; }
#endif
        /// <summary>Determines which webhook format will be used, Telnyx API v1, v2, or a legacy 2010-04-01 format.</summary>
        public global::Soenneker.Telnyx.Models.MessagingProfile_webhook_api_version? WebhookApiVersion { get; set; }
        /// <summary>The failover URL where webhooks related to this messaging profile will be sent if sending to the primary URL fails.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebhookFailoverUrl { get; set; }
#nullable restore
#else
        public string WebhookFailoverUrl { get; set; }
#endif
        /// <summary>The URL where webhooks related to this messaging profile will be sent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebhookUrl { get; set; }
#nullable restore
#else
        public string WebhookUrl { get; set; }
#endif
        /// <summary>Destinations to which the messaging profile is allowed to send. The elements in the list must be valid ISO 3166-1 alpha-2 country codes. If set to `[&quot;*&quot;]`, all destinations will be allowed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? WhitelistedDestinations { get; set; }
#nullable restore
#else
        public List<string> WhitelistedDestinations { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.Models.MessagingProfile"/> and sets the default values.
        /// </summary>
        public MessagingProfile()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.Models.MessagingProfile"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.Models.MessagingProfile CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.Models.MessagingProfile();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "alpha_sender", n => { AlphaSender = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "daily_spend_limit", n => { DailySpendLimit = n.GetStringValue(); } },
                { "daily_spend_limit_enabled", n => { DailySpendLimitEnabled = n.GetBoolValue(); } },
                { "enabled", n => { Enabled = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "mms_fall_back_to_sms", n => { MmsFallBackToSms = n.GetBoolValue(); } },
                { "mms_transcoding", n => { MmsTranscoding = n.GetBoolValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "number_pool_settings", n => { NumberPoolSettings = n.GetObjectValue<global::Soenneker.Telnyx.Models.NumberPoolSettings>(global::Soenneker.Telnyx.Models.NumberPoolSettings.CreateFromDiscriminatorValue); } },
                { "record_type", n => { RecordType = n.GetEnumValue<global::Soenneker.Telnyx.Models.MessagingProfile_record_type>(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
                { "url_shortener_settings", n => { UrlShortenerSettings = n.GetObjectValue<global::Soenneker.Telnyx.Models.UrlShortenerSettings>(global::Soenneker.Telnyx.Models.UrlShortenerSettings.CreateFromDiscriminatorValue); } },
                { "v1_secret", n => { V1Secret = n.GetStringValue(); } },
                { "webhook_api_version", n => { WebhookApiVersion = n.GetEnumValue<global::Soenneker.Telnyx.Models.MessagingProfile_webhook_api_version>(); } },
                { "webhook_failover_url", n => { WebhookFailoverUrl = n.GetStringValue(); } },
                { "webhook_url", n => { WebhookUrl = n.GetStringValue(); } },
                { "whitelisted_destinations", n => { WhitelistedDestinations = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("alpha_sender", AlphaSender);
            writer.WriteStringValue("daily_spend_limit", DailySpendLimit);
            writer.WriteBoolValue("daily_spend_limit_enabled", DailySpendLimitEnabled);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteBoolValue("mms_fall_back_to_sms", MmsFallBackToSms);
            writer.WriteBoolValue("mms_transcoding", MmsTranscoding);
            writer.WriteStringValue("name", Name);
            writer.WriteObjectValue<global::Soenneker.Telnyx.Models.NumberPoolSettings>("number_pool_settings", NumberPoolSettings);
            writer.WriteObjectValue<global::Soenneker.Telnyx.Models.UrlShortenerSettings>("url_shortener_settings", UrlShortenerSettings);
            writer.WriteStringValue("v1_secret", V1Secret);
            writer.WriteEnumValue<global::Soenneker.Telnyx.Models.MessagingProfile_webhook_api_version>("webhook_api_version", WebhookApiVersion);
            writer.WriteStringValue("webhook_failover_url", WebhookFailoverUrl);
            writer.WriteStringValue("webhook_url", WebhookUrl);
            writer.WriteCollectionOfPrimitiveValues<string>("whitelisted_destinations", WhitelistedDestinations);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
