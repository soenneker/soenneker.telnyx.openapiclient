// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ScheduledSmsEventResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The assistant_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AssistantId { get; set; }
#nullable restore
#else
        public string AssistantId { get; set; }
#endif
        /// <summary>The conversation_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConversationId { get; set; }
#nullable restore
#else
        public string ConversationId { get; set; }
#endif
        /// <summary>The conversation_metadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.OpenApiClient.Models.ScheduledSmsEventResponse_conversation_metadata? ConversationMetadata { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.OpenApiClient.Models.ScheduledSmsEventResponse_conversation_metadata ConversationMetadata { get; set; }
#endif
        /// <summary>The created_at property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The errors property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Errors { get; set; }
#nullable restore
#else
        public List<string> Errors { get; set; }
#endif
        /// <summary>The retry_count property</summary>
        public int? RetryCount { get; set; }
        /// <summary>The scheduled_at_fixed_datetime property</summary>
        public DateTimeOffset? ScheduledAtFixedDatetime { get; set; }
        /// <summary>The scheduled_event_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScheduledEventId { get; set; }
#nullable restore
#else
        public string ScheduledEventId { get; set; }
#endif
        /// <summary>The status property</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.EventStatus? Status { get; set; }
        /// <summary>The telnyx_agent_target property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TelnyxAgentTarget { get; set; }
#nullable restore
#else
        public string TelnyxAgentTarget { get; set; }
#endif
        /// <summary>The telnyx_conversation_channel property</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.ConversationChannelType? TelnyxConversationChannel { get; set; }
        /// <summary>The telnyx_end_user_target property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TelnyxEndUserTarget { get; set; }
#nullable restore
#else
        public string TelnyxEndUserTarget { get; set; }
#endif
        /// <summary>The text property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Text { get; set; }
#nullable restore
#else
        public string Text { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.ScheduledSmsEventResponse"/> and sets the default values.
        /// </summary>
        public ScheduledSmsEventResponse()
        {
            AdditionalData = new Dictionary<string, object>();
            Status = global::Soenneker.Telnyx.OpenApiClient.Models.EventStatus.Pending;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.ScheduledSmsEventResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.ScheduledSmsEventResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.ScheduledSmsEventResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "assistant_id", n => { AssistantId = n.GetStringValue(); } },
                { "conversation_id", n => { ConversationId = n.GetStringValue(); } },
                { "conversation_metadata", n => { ConversationMetadata = n.GetObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.ScheduledSmsEventResponse_conversation_metadata>(global::Soenneker.Telnyx.OpenApiClient.Models.ScheduledSmsEventResponse_conversation_metadata.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "errors", n => { Errors = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "retry_count", n => { RetryCount = n.GetIntValue(); } },
                { "scheduled_at_fixed_datetime", n => { ScheduledAtFixedDatetime = n.GetDateTimeOffsetValue(); } },
                { "scheduled_event_id", n => { ScheduledEventId = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.EventStatus>(); } },
                { "telnyx_agent_target", n => { TelnyxAgentTarget = n.GetStringValue(); } },
                { "telnyx_conversation_channel", n => { TelnyxConversationChannel = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.ConversationChannelType>(); } },
                { "telnyx_end_user_target", n => { TelnyxEndUserTarget = n.GetStringValue(); } },
                { "text", n => { Text = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("assistant_id", AssistantId);
            writer.WriteStringValue("conversation_id", ConversationId);
            writer.WriteObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.ScheduledSmsEventResponse_conversation_metadata>("conversation_metadata", ConversationMetadata);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteCollectionOfPrimitiveValues<string>("errors", Errors);
            writer.WriteIntValue("retry_count", RetryCount);
            writer.WriteDateTimeOffsetValue("scheduled_at_fixed_datetime", ScheduledAtFixedDatetime);
            writer.WriteStringValue("scheduled_event_id", ScheduledEventId);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.EventStatus>("status", Status);
            writer.WriteStringValue("telnyx_agent_target", TelnyxAgentTarget);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.ConversationChannelType>("telnyx_conversation_channel", TelnyxConversationChannel);
            writer.WriteStringValue("telnyx_end_user_target", TelnyxEndUserTarget);
            writer.WriteStringValue("text", Text);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
