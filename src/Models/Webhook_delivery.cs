// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    /// <summary>
    /// Record of all attempts to deliver a webhook.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Webhook_delivery : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Detailed delivery attempts, ordered by most recent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Telnyx.OpenApiClient.Models.Attempt>? Attempts { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Telnyx.OpenApiClient.Models.Attempt> Attempts { get; set; }
#endif
        /// <summary>ISO 8601 timestamp indicating when the last webhook response has been received.</summary>
        public DateTimeOffset? FinishedAt { get; set; }
        /// <summary>Uniquely identifies the webhook_delivery record.</summary>
        public Guid? Id { get; set; }
        /// <summary>Identifies the type of the resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecordType { get; set; }
#nullable restore
#else
        public string RecordType { get; set; }
#endif
        /// <summary>ISO 8601 timestamp indicating when the first request attempt was initiated.</summary>
        public DateTimeOffset? StartedAt { get; set; }
        /// <summary>Delivery status: &apos;delivered&apos; when successfuly delivered or &apos;failed&apos; if all attempts have failed.</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.Webhook_delivery_status? Status { get; set; }
        /// <summary>Uniquely identifies the user that owns the webhook_delivery record.</summary>
        public Guid? UserId { get; set; }
        /// <summary>Original webhook JSON data. Payload fields vary according to event type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.OpenApiClient.Models.Webhook_delivery_webhook? Webhook { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.OpenApiClient.Models.Webhook_delivery_webhook Webhook { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.Webhook_delivery"/> and sets the default values.
        /// </summary>
        public Webhook_delivery()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.Webhook_delivery"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.Webhook_delivery CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.Webhook_delivery();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "attempts", n => { Attempts = n.GetCollectionOfObjectValues<global::Soenneker.Telnyx.OpenApiClient.Models.Attempt>(global::Soenneker.Telnyx.OpenApiClient.Models.Attempt.CreateFromDiscriminatorValue)?.AsList(); } },
                { "finished_at", n => { FinishedAt = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "record_type", n => { RecordType = n.GetStringValue(); } },
                { "started_at", n => { StartedAt = n.GetDateTimeOffsetValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.Webhook_delivery_status>(); } },
                { "user_id", n => { UserId = n.GetGuidValue(); } },
                { "webhook", n => { Webhook = n.GetObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.Webhook_delivery_webhook>(global::Soenneker.Telnyx.OpenApiClient.Models.Webhook_delivery_webhook.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Soenneker.Telnyx.OpenApiClient.Models.Attempt>("attempts", Attempts);
            writer.WriteDateTimeOffsetValue("finished_at", FinishedAt);
            writer.WriteGuidValue("id", Id);
            writer.WriteStringValue("record_type", RecordType);
            writer.WriteDateTimeOffsetValue("started_at", StartedAt);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.Webhook_delivery_status>("status", Status);
            writer.WriteGuidValue("user_id", UserId);
            writer.WriteObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.Webhook_delivery_webhook>("webhook", Webhook);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
