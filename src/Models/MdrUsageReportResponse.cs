// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MdrUsageReportResponse : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The aggregation_type property</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageReportResponse_aggregation_type? AggregationType { get; set; }
        /// <summary>The connections property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<long?>? Connections { get; set; }
#nullable restore
#else
        public List<long?> Connections { get; set; }
#endif
        /// <summary>The created_at property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The end_date property</summary>
        public DateTimeOffset? EndDate { get; set; }
        /// <summary>Identifies the resource</summary>
        public Guid? Id { get; set; }
        /// <summary>The profiles property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Profiles { get; set; }
#nullable restore
#else
        public string Profiles { get; set; }
#endif
        /// <summary>The record_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecordType { get; set; }
#nullable restore
#else
        public string RecordType { get; set; }
#endif
        /// <summary>The report_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReportUrl { get; set; }
#nullable restore
#else
        public string ReportUrl { get; set; }
#endif
        /// <summary>The result property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageRecord>? Result { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageRecord> Result { get; set; }
#endif
        /// <summary>The start_date property</summary>
        public DateTimeOffset? StartDate { get; set; }
        /// <summary>The status property</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageReportResponse_status? Status { get; set; }
        /// <summary>The updated_at property</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageReportResponse"/> and sets the default values.
        /// </summary>
        public MdrUsageReportResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageReportResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageReportResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageReportResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "aggregation_type", n => { AggregationType = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageReportResponse_aggregation_type>(); } },
                { "connections", n => { Connections = n.GetCollectionOfPrimitiveValues<long?>()?.AsList(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "end_date", n => { EndDate = n.GetDateTimeOffsetValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "profiles", n => { Profiles = n.GetStringValue(); } },
                { "record_type", n => { RecordType = n.GetStringValue(); } },
                { "report_url", n => { ReportUrl = n.GetStringValue(); } },
                { "result", n => { Result = n.GetCollectionOfObjectValues<global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageRecord>(global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageRecord.CreateFromDiscriminatorValue)?.AsList(); } },
                { "start_date", n => { StartDate = n.GetDateTimeOffsetValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageReportResponse_status>(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageReportResponse_aggregation_type>("aggregation_type", AggregationType);
            writer.WriteCollectionOfPrimitiveValues<long?>("connections", Connections);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteDateTimeOffsetValue("end_date", EndDate);
            writer.WriteGuidValue("id", Id);
            writer.WriteStringValue("profiles", Profiles);
            writer.WriteStringValue("record_type", RecordType);
            writer.WriteStringValue("report_url", ReportUrl);
            writer.WriteCollectionOfObjectValues<global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageRecord>("result", Result);
            writer.WriteDateTimeOffsetValue("start_date", StartDate);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.MdrUsageReportResponse_status>("status", Status);
            writer.WriteDateTimeOffsetValue("updated_at", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
