// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ConferenceRecordingResource : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The id of the account the resource belongs to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccountSid { get; set; }
#nullable restore
#else
        public string AccountSid { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The identifier of the related participant&apos;s call.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CallSid { get; set; }
#nullable restore
#else
        public string CallSid { get; set; }
#endif
        /// <summary>The number of channels in the recording.</summary>
        public int? Channels { get; set; }
        /// <summary>The identifier of the related conference.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConferenceSid { get; set; }
#nullable restore
#else
        public string ConferenceSid { get; set; }
#endif
        /// <summary>The timestamp of when the resource was created.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DateCreated { get; set; }
#nullable restore
#else
        public string DateCreated { get; set; }
#endif
        /// <summary>The timestamp of when the resource was last updated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DateUpdated { get; set; }
#nullable restore
#else
        public string DateUpdated { get; set; }
#endif
        /// <summary>Duratin of the recording in seconds.</summary>
        public int? Duration { get; set; }
        /// <summary>The recording error, if any.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ErrorCode { get; set; }
#nullable restore
#else
        public string ErrorCode { get; set; }
#endif
        /// <summary>The URL to use to download the recording.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MediaUrl { get; set; }
#nullable restore
#else
        public string MediaUrl { get; set; }
#endif
        /// <summary>The unique identifier of the recording.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sid { get; set; }
#nullable restore
#else
        public string Sid { get; set; }
#endif
        /// <summary>How the recording was started.</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource_source? Source { get; set; }
        /// <summary>The timestamp of when the recording was started.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartTime { get; set; }
#nullable restore
#else
        public string StartTime { get; set; }
#endif
        /// <summary>The status of the recording.</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource_status? Status { get; set; }
        /// <summary>A list of related resources identified by their relative URIs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource_subresource_uris? SubresourceUris { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource_subresource_uris SubresourceUris { get; set; }
#endif
        /// <summary>The relative URI for this recording.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uri { get; set; }
#nullable restore
#else
        public string Uri { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource"/> and sets the default values.
        /// </summary>
        public ConferenceRecordingResource()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "account_sid", n => { AccountSid = n.GetStringValue(); } },
                { "call_sid", n => { CallSid = n.GetStringValue(); } },
                { "channels", n => { Channels = n.GetIntValue(); } },
                { "conference_sid", n => { ConferenceSid = n.GetStringValue(); } },
                { "date_created", n => { DateCreated = n.GetStringValue(); } },
                { "date_updated", n => { DateUpdated = n.GetStringValue(); } },
                { "duration", n => { Duration = n.GetIntValue(); } },
                { "error_code", n => { ErrorCode = n.GetStringValue(); } },
                { "media_url", n => { MediaUrl = n.GetStringValue(); } },
                { "sid", n => { Sid = n.GetStringValue(); } },
                { "source", n => { Source = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource_source>(); } },
                { "start_time", n => { StartTime = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource_status>(); } },
                { "subresource_uris", n => { SubresourceUris = n.GetObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource_subresource_uris>(global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource_subresource_uris.CreateFromDiscriminatorValue); } },
                { "uri", n => { Uri = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("account_sid", AccountSid);
            writer.WriteStringValue("call_sid", CallSid);
            writer.WriteIntValue("channels", Channels);
            writer.WriteStringValue("conference_sid", ConferenceSid);
            writer.WriteStringValue("date_created", DateCreated);
            writer.WriteStringValue("date_updated", DateUpdated);
            writer.WriteIntValue("duration", Duration);
            writer.WriteStringValue("error_code", ErrorCode);
            writer.WriteStringValue("media_url", MediaUrl);
            writer.WriteStringValue("sid", Sid);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource_source>("source", Source);
            writer.WriteStringValue("start_time", StartTime);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource_status>("status", Status);
            writer.WriteObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.ConferenceRecordingResource_subresource_uris>("subresource_uris", SubresourceUris);
            writer.WriteStringValue("uri", Uri);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
