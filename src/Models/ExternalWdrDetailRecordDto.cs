// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ExternalWdrDetailRecordDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The cost property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.Models.WirelessCost? Cost { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.Models.WirelessCost Cost { get; set; }
#endif
        /// <summary>Record created time</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The downlink_data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.Models.DownlinkData? DownlinkData { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.Models.DownlinkData DownlinkData { get; set; }
#endif
        /// <summary>Session duration in seconds.</summary>
        public double? DurationSeconds { get; set; }
        /// <summary>WDR id</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>International mobile subscriber identity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Imsi { get; set; }
#nullable restore
#else
        public string Imsi { get; set; }
#endif
        /// <summary>Mobile country code.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Mcc { get; set; }
#nullable restore
#else
        public string Mcc { get; set; }
#endif
        /// <summary>Mobile network code.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Mnc { get; set; }
#nullable restore
#else
        public string Mnc { get; set; }
#endif
        /// <summary>Phone number</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PhoneNumber { get; set; }
#nullable restore
#else
        public string PhoneNumber { get; set; }
#endif
        /// <summary>The rate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.Models.WirelessRate? Rate { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.Models.WirelessRate Rate { get; set; }
#endif
        /// <summary>The record_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecordType { get; set; }
#nullable restore
#else
        public string RecordType { get; set; }
#endif
        /// <summary>Sim card unique identifier</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SimCardId { get; set; }
#nullable restore
#else
        public string SimCardId { get; set; }
#endif
        /// <summary>Sim group unique identifier</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SimGroupId { get; set; }
#nullable restore
#else
        public string SimGroupId { get; set; }
#endif
        /// <summary>Defined sim group name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SimGroupName { get; set; }
#nullable restore
#else
        public string SimGroupName { get; set; }
#endif
        /// <summary>The uplink_data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.Models.UplinkData? UplinkData { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.Models.UplinkData UplinkData { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.Models.ExternalWdrDetailRecordDto"/> and sets the default values.
        /// </summary>
        public ExternalWdrDetailRecordDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.Models.ExternalWdrDetailRecordDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.Models.ExternalWdrDetailRecordDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.Models.ExternalWdrDetailRecordDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "cost", n => { Cost = n.GetObjectValue<global::Soenneker.Telnyx.Models.WirelessCost>(global::Soenneker.Telnyx.Models.WirelessCost.CreateFromDiscriminatorValue); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "downlink_data", n => { DownlinkData = n.GetObjectValue<global::Soenneker.Telnyx.Models.DownlinkData>(global::Soenneker.Telnyx.Models.DownlinkData.CreateFromDiscriminatorValue); } },
                { "duration_seconds", n => { DurationSeconds = n.GetDoubleValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "imsi", n => { Imsi = n.GetStringValue(); } },
                { "mcc", n => { Mcc = n.GetStringValue(); } },
                { "mnc", n => { Mnc = n.GetStringValue(); } },
                { "phone_number", n => { PhoneNumber = n.GetStringValue(); } },
                { "rate", n => { Rate = n.GetObjectValue<global::Soenneker.Telnyx.Models.WirelessRate>(global::Soenneker.Telnyx.Models.WirelessRate.CreateFromDiscriminatorValue); } },
                { "record_type", n => { RecordType = n.GetStringValue(); } },
                { "sim_card_id", n => { SimCardId = n.GetStringValue(); } },
                { "sim_group_id", n => { SimGroupId = n.GetStringValue(); } },
                { "sim_group_name", n => { SimGroupName = n.GetStringValue(); } },
                { "uplink_data", n => { UplinkData = n.GetObjectValue<global::Soenneker.Telnyx.Models.UplinkData>(global::Soenneker.Telnyx.Models.UplinkData.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Soenneker.Telnyx.Models.WirelessCost>("cost", Cost);
            writer.WriteDateTimeOffsetValue("created_at", CreatedAt);
            writer.WriteObjectValue<global::Soenneker.Telnyx.Models.DownlinkData>("downlink_data", DownlinkData);
            writer.WriteDoubleValue("duration_seconds", DurationSeconds);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("imsi", Imsi);
            writer.WriteStringValue("mcc", Mcc);
            writer.WriteStringValue("mnc", Mnc);
            writer.WriteStringValue("phone_number", PhoneNumber);
            writer.WriteObjectValue<global::Soenneker.Telnyx.Models.WirelessRate>("rate", Rate);
            writer.WriteStringValue("record_type", RecordType);
            writer.WriteStringValue("sim_card_id", SimCardId);
            writer.WriteStringValue("sim_group_id", SimGroupId);
            writer.WriteStringValue("sim_group_name", SimGroupName);
            writer.WriteObjectValue<global::Soenneker.Telnyx.Models.UplinkData>("uplink_data", UplinkData);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
