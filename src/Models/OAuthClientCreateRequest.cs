// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class OAuthClientCreateRequest : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>List of allowed OAuth grant types</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Soenneker.Telnyx.OpenApiClient.Models.OAuthClientCreateRequest_allowed_grant_types?>? AllowedGrantTypes { get; set; }
#nullable restore
#else
        public List<global::Soenneker.Telnyx.OpenApiClient.Models.OAuthClientCreateRequest_allowed_grant_types?> AllowedGrantTypes { get; set; }
#endif
        /// <summary>List of allowed OAuth scopes</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AllowedScopes { get; set; }
#nullable restore
#else
        public List<string> AllowedScopes { get; set; }
#endif
        /// <summary>OAuth client type</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.OAuthClientCreateRequest_client_type? ClientType { get; set; }
        /// <summary>URL of the client logo</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LogoUri { get; set; }
#nullable restore
#else
        public string LogoUri { get; set; }
#endif
        /// <summary>The name of the OAuth client</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>URL of the client&apos;s privacy policy</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicyUri { get; set; }
#nullable restore
#else
        public string PolicyUri { get; set; }
#endif
        /// <summary>List of redirect URIs (required for authorization_code flow)</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? RedirectUris { get; set; }
#nullable restore
#else
        public List<string> RedirectUris { get; set; }
#endif
        /// <summary>Whether PKCE (Proof Key for Code Exchange) is required for this client</summary>
        public bool? RequirePkce { get; set; }
        /// <summary>URL of the client&apos;s terms of service</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TosUri { get; set; }
#nullable restore
#else
        public string TosUri { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.OAuthClientCreateRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.OAuthClientCreateRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.OAuthClientCreateRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "allowed_grant_types", n => { AllowedGrantTypes = n.GetCollectionOfEnumValues<global::Soenneker.Telnyx.OpenApiClient.Models.OAuthClientCreateRequest_allowed_grant_types>()?.AsList(); } },
                { "allowed_scopes", n => { AllowedScopes = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "client_type", n => { ClientType = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.OAuthClientCreateRequest_client_type>(); } },
                { "logo_uri", n => { LogoUri = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "policy_uri", n => { PolicyUri = n.GetStringValue(); } },
                { "redirect_uris", n => { RedirectUris = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "require_pkce", n => { RequirePkce = n.GetBoolValue(); } },
                { "tos_uri", n => { TosUri = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfEnumValues<global::Soenneker.Telnyx.OpenApiClient.Models.OAuthClientCreateRequest_allowed_grant_types>("allowed_grant_types", AllowedGrantTypes);
            writer.WriteCollectionOfPrimitiveValues<string>("allowed_scopes", AllowedScopes);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.OAuthClientCreateRequest_client_type>("client_type", ClientType);
            writer.WriteStringValue("logo_uri", LogoUri);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("policy_uri", PolicyUri);
            writer.WriteCollectionOfPrimitiveValues<string>("redirect_uris", RedirectUris);
            writer.WriteBoolValue("require_pkce", RequirePkce);
            writer.WriteStringValue("tos_uri", TosUri);
        }
    }
}
#pragma warning restore CS0618
