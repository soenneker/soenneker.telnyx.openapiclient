// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class GlobalIPHealthCheck : global::Soenneker.Telnyx.OpenApiClient.Models.Record, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Global IP ID.</summary>
        public Guid? GlobalIpId { get; set; }
        /// <summary>A Global IP health check params.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Soenneker.Telnyx.OpenApiClient.Models.GlobalIPHealthCheck_health_check_params? HealthCheckParams { get; set; }
#nullable restore
#else
        public global::Soenneker.Telnyx.OpenApiClient.Models.GlobalIPHealthCheck_health_check_params HealthCheckParams { get; set; }
#endif
        /// <summary>The Global IP health check type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HealthCheckType { get; set; }
#nullable restore
#else
        public string HealthCheckType { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.GlobalIPHealthCheck"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Soenneker.Telnyx.OpenApiClient.Models.GlobalIPHealthCheck CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.GlobalIPHealthCheck();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "global_ip_id", n => { GlobalIpId = n.GetGuidValue(); } },
                { "health_check_params", n => { HealthCheckParams = n.GetObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.GlobalIPHealthCheck_health_check_params>(global::Soenneker.Telnyx.OpenApiClient.Models.GlobalIPHealthCheck_health_check_params.CreateFromDiscriminatorValue); } },
                { "health_check_type", n => { HealthCheckType = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteGuidValue("global_ip_id", GlobalIpId);
            writer.WriteObjectValue<global::Soenneker.Telnyx.OpenApiClient.Models.GlobalIPHealthCheck_health_check_params>("health_check_params", HealthCheckParams);
            writer.WriteStringValue("health_check_type", HealthCheckType);
        }
    }
}
#pragma warning restore CS0618
