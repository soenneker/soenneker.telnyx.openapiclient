// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    /// <summary>
    /// The call recording settings for a phone number.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class CallRecording : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>When using &apos;dual&apos; channels, final audio file will be stereo recorded with the first leg on channel A, and the rest on channel B.</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.CallRecording_inbound_call_recording_channels? InboundCallRecordingChannels { get; set; }
        /// <summary>When enabled, any inbound call to this number will be recorded.</summary>
        public bool? InboundCallRecordingEnabled { get; set; }
        /// <summary>The audio file format for calls being recorded.</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.CallRecording_inbound_call_recording_format? InboundCallRecordingFormat { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.CallRecording"/> and sets the default values.
        /// </summary>
        public CallRecording()
        {
            AdditionalData = new Dictionary<string, object>();
            InboundCallRecordingChannels = global::Soenneker.Telnyx.OpenApiClient.Models.CallRecording_inbound_call_recording_channels.Single;
            InboundCallRecordingFormat = global::Soenneker.Telnyx.OpenApiClient.Models.CallRecording_inbound_call_recording_format.Wav;
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.CallRecording"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.CallRecording CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.CallRecording();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "inbound_call_recording_channels", n => { InboundCallRecordingChannels = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.CallRecording_inbound_call_recording_channels>(); } },
                { "inbound_call_recording_enabled", n => { InboundCallRecordingEnabled = n.GetBoolValue(); } },
                { "inbound_call_recording_format", n => { InboundCallRecordingFormat = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.CallRecording_inbound_call_recording_format>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.CallRecording_inbound_call_recording_channels>("inbound_call_recording_channels", InboundCallRecordingChannels);
            writer.WriteBoolValue("inbound_call_recording_enabled", InboundCallRecordingEnabled);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.CallRecording_inbound_call_recording_format>("inbound_call_recording_format", InboundCallRecordingFormat);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
