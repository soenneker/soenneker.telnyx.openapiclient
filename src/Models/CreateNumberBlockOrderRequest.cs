// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CreateNumberBlockOrderRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Identifies the connection associated with this phone number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConnectionId { get; set; }
#nullable restore
#else
        public string ConnectionId { get; set; }
#endif
        /// <summary>An ISO 8901 datetime string denoting when the number order was created.</summary>
        public DateTimeOffset? CreatedAt { get; private set; }
        /// <summary>A customer reference string for customer look ups.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerReference { get; set; }
#nullable restore
#else
        public string CustomerReference { get; set; }
#endif
        /// <summary>Errors the reservation could happen upon</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Errors { get; private set; }
#nullable restore
#else
        public string Errors { get; private set; }
#endif
        /// <summary>The id property</summary>
        public Guid? Id { get; private set; }
        /// <summary>Identifies the messaging profile associated with the phone number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MessagingProfileId { get; set; }
#nullable restore
#else
        public string MessagingProfileId { get; set; }
#endif
        /// <summary>The count of phone numbers in the number order.</summary>
        public int? PhoneNumbersCount { get; private set; }
        /// <summary>The phone number range included in the block.</summary>
        public int? Range { get; set; }
        /// <summary>The record_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecordType { get; private set; }
#nullable restore
#else
        public string RecordType { get; private set; }
#endif
        /// <summary>True if all requirements are met for every phone number, false otherwise.</summary>
        public bool? RequirementsMet { get; private set; }
        /// <summary>Starting phone number block</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartingNumber { get; set; }
#nullable restore
#else
        public string StartingNumber { get; set; }
#endif
        /// <summary>The status of the order.</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.CreateNumberBlockOrderRequest_status? Status { get; private set; }
        /// <summary>An ISO 8901 datetime string for when the number order was updated.</summary>
        public DateTimeOffset? UpdatedAt { get; private set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.CreateNumberBlockOrderRequest"/> and sets the default values.
        /// </summary>
        public CreateNumberBlockOrderRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.CreateNumberBlockOrderRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.CreateNumberBlockOrderRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.CreateNumberBlockOrderRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "connection_id", n => { ConnectionId = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "customer_reference", n => { CustomerReference = n.GetStringValue(); } },
                { "errors", n => { Errors = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "messaging_profile_id", n => { MessagingProfileId = n.GetStringValue(); } },
                { "phone_numbers_count", n => { PhoneNumbersCount = n.GetIntValue(); } },
                { "range", n => { Range = n.GetIntValue(); } },
                { "record_type", n => { RecordType = n.GetStringValue(); } },
                { "requirements_met", n => { RequirementsMet = n.GetBoolValue(); } },
                { "starting_number", n => { StartingNumber = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.CreateNumberBlockOrderRequest_status>(); } },
                { "updated_at", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("connection_id", ConnectionId);
            writer.WriteStringValue("customer_reference", CustomerReference);
            writer.WriteStringValue("messaging_profile_id", MessagingProfileId);
            writer.WriteIntValue("range", Range);
            writer.WriteStringValue("starting_number", StartingNumber);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
