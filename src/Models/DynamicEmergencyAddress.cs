// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Soenneker.Telnyx.OpenApiClient.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class DynamicEmergencyAddress : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The administrative_area property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AdministrativeArea { get; set; }
#nullable restore
#else
        public string AdministrativeArea { get; set; }
#endif
        /// <summary>The country_code property</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.DynamicEmergencyAddress_country_code? CountryCode { get; set; }
        /// <summary>ISO 8601 formatted date of when the resource was created</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; private set; }
#nullable restore
#else
        public string CreatedAt { get; private set; }
#endif
        /// <summary>The extended_address property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExtendedAddress { get; set; }
#nullable restore
#else
        public string ExtendedAddress { get; set; }
#endif
        /// <summary>The house_number property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HouseNumber { get; set; }
#nullable restore
#else
        public string HouseNumber { get; set; }
#endif
        /// <summary>The house_suffix property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HouseSuffix { get; set; }
#nullable restore
#else
        public string HouseSuffix { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; private set; }
#nullable restore
#else
        public string Id { get; private set; }
#endif
        /// <summary>The locality property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Locality { get; set; }
#nullable restore
#else
        public string Locality { get; set; }
#endif
        /// <summary>The postal_code property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostalCode { get; set; }
#nullable restore
#else
        public string PostalCode { get; set; }
#endif
        /// <summary>Identifies the type of the resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecordType { get; private set; }
#nullable restore
#else
        public string RecordType { get; private set; }
#endif
        /// <summary>Unique location reference string to be used in SIP INVITE from / p-asserted headers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SipGeolocationId { get; private set; }
#nullable restore
#else
        public string SipGeolocationId { get; private set; }
#endif
        /// <summary>Status of dynamic emergency address</summary>
        public global::Soenneker.Telnyx.OpenApiClient.Models.DynamicEmergencyAddress_status? Status { get; private set; }
        /// <summary>The street_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StreetName { get; set; }
#nullable restore
#else
        public string StreetName { get; set; }
#endif
        /// <summary>The street_post_directional property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StreetPostDirectional { get; set; }
#nullable restore
#else
        public string StreetPostDirectional { get; set; }
#endif
        /// <summary>The street_pre_directional property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StreetPreDirectional { get; set; }
#nullable restore
#else
        public string StreetPreDirectional { get; set; }
#endif
        /// <summary>The street_suffix property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StreetSuffix { get; set; }
#nullable restore
#else
        public string StreetSuffix { get; set; }
#endif
        /// <summary>ISO 8601 formatted date of when the resource was last updated</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedAt { get; private set; }
#nullable restore
#else
        public string UpdatedAt { get; private set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.DynamicEmergencyAddress"/> and sets the default values.
        /// </summary>
        public DynamicEmergencyAddress()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.OpenApiClient.Models.DynamicEmergencyAddress"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Soenneker.Telnyx.OpenApiClient.Models.DynamicEmergencyAddress CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Soenneker.Telnyx.OpenApiClient.Models.DynamicEmergencyAddress();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "administrative_area", n => { AdministrativeArea = n.GetStringValue(); } },
                { "country_code", n => { CountryCode = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.DynamicEmergencyAddress_country_code>(); } },
                { "created_at", n => { CreatedAt = n.GetStringValue(); } },
                { "extended_address", n => { ExtendedAddress = n.GetStringValue(); } },
                { "house_number", n => { HouseNumber = n.GetStringValue(); } },
                { "house_suffix", n => { HouseSuffix = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "locality", n => { Locality = n.GetStringValue(); } },
                { "postal_code", n => { PostalCode = n.GetStringValue(); } },
                { "record_type", n => { RecordType = n.GetStringValue(); } },
                { "sip_geolocation_id", n => { SipGeolocationId = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.DynamicEmergencyAddress_status>(); } },
                { "street_name", n => { StreetName = n.GetStringValue(); } },
                { "street_post_directional", n => { StreetPostDirectional = n.GetStringValue(); } },
                { "street_pre_directional", n => { StreetPreDirectional = n.GetStringValue(); } },
                { "street_suffix", n => { StreetSuffix = n.GetStringValue(); } },
                { "updated_at", n => { UpdatedAt = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("administrative_area", AdministrativeArea);
            writer.WriteEnumValue<global::Soenneker.Telnyx.OpenApiClient.Models.DynamicEmergencyAddress_country_code>("country_code", CountryCode);
            writer.WriteStringValue("extended_address", ExtendedAddress);
            writer.WriteStringValue("house_number", HouseNumber);
            writer.WriteStringValue("house_suffix", HouseSuffix);
            writer.WriteStringValue("locality", Locality);
            writer.WriteStringValue("postal_code", PostalCode);
            writer.WriteStringValue("street_name", StreetName);
            writer.WriteStringValue("street_post_directional", StreetPostDirectional);
            writer.WriteStringValue("street_pre_directional", StreetPreDirectional);
            writer.WriteStringValue("street_suffix", StreetSuffix);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
