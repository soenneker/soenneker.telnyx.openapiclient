// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using Soenneker.Telnyx.Models;
using Soenneker.Telnyx.Partner_campaigns.Item;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Soenneker.Telnyx.Partner_campaigns
{
    /// <summary>
    /// Builds and executes requests for operations under \partner_campaigns
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Partner_campaignsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the Soenneker.Telnyx.partner_campaigns.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        /// <returns>A <see cref="global::Soenneker.Telnyx.Partner_campaigns.Item.WithCampaignItemRequestBuilder"/></returns>
        public global::Soenneker.Telnyx.Partner_campaigns.Item.WithCampaignItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("campaignId", position);
                return new global::Soenneker.Telnyx.Partner_campaigns.Item.WithCampaignItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.Partner_campaigns.Partner_campaignsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Partner_campaignsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/partner_campaigns{?page*,recordsPerPage*,sort*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Soenneker.Telnyx.Partner_campaigns.Partner_campaignsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public Partner_campaignsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/partner_campaigns{?page*,recordsPerPage*,sort*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieve all partner campaigns you have shared to Telnyx in a paginated fashion.This endpoint is currently limited to only returning shared campaigns that Telnyx has accepted. In other words, shared but pending campaigns are currently omitted from the response from this endpoint.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.Models.TelnyxDownstreamCampaignRecordSet"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Soenneker.Telnyx.Models.HTTPValidationError">When receiving a 422 status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Soenneker.Telnyx.Models.TelnyxDownstreamCampaignRecordSet?> GetAsync(Action<RequestConfiguration<global::Soenneker.Telnyx.Partner_campaigns.Partner_campaignsRequestBuilder.Partner_campaignsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Soenneker.Telnyx.Models.TelnyxDownstreamCampaignRecordSet> GetAsync(Action<RequestConfiguration<global::Soenneker.Telnyx.Partner_campaigns.Partner_campaignsRequestBuilder.Partner_campaignsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "422", global::Soenneker.Telnyx.Models.HTTPValidationError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Soenneker.Telnyx.Models.TelnyxDownstreamCampaignRecordSet>(requestInfo, global::Soenneker.Telnyx.Models.TelnyxDownstreamCampaignRecordSet.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieve all partner campaigns you have shared to Telnyx in a paginated fashion.This endpoint is currently limited to only returning shared campaigns that Telnyx has accepted. In other words, shared but pending campaigns are currently omitted from the response from this endpoint.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Soenneker.Telnyx.Partner_campaigns.Partner_campaignsRequestBuilder.Partner_campaignsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Soenneker.Telnyx.Partner_campaigns.Partner_campaignsRequestBuilder.Partner_campaignsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Soenneker.Telnyx.Partner_campaigns.Partner_campaignsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Soenneker.Telnyx.Partner_campaigns.Partner_campaignsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Soenneker.Telnyx.Partner_campaigns.Partner_campaignsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieve all partner campaigns you have shared to Telnyx in a paginated fashion.This endpoint is currently limited to only returning shared campaigns that Telnyx has accepted. In other words, shared but pending campaigns are currently omitted from the response from this endpoint.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Partner_campaignsRequestBuilderGetQueryParameters 
        {
            /// <summary>The 1-indexed page number to get. The default value is `1`.</summary>
            [QueryParameter("page")]
            public int? Page { get; set; }
            /// <summary>The amount of records per page, limited to between 1 and 500 inclusive. The default value is `10`.</summary>
            [QueryParameter("recordsPerPage")]
            public int? RecordsPerPage { get; set; }
            /// <summary>Specifies the sort order for results. If not given, results are sorted by createdAt in descending order.</summary>
            [Obsolete("This property is deprecated, use SortAsGetSortQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("sort")]
            public string? Sort { get; set; }
#nullable restore
#else
            [QueryParameter("sort")]
            public string Sort { get; set; }
#endif
            /// <summary>Specifies the sort order for results. If not given, results are sorted by createdAt in descending order.</summary>
            [QueryParameter("sort")]
            public global::Soenneker.Telnyx.Partner_campaigns.GetSortQueryParameterType? SortAsGetSortQueryParameterType { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class Partner_campaignsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Soenneker.Telnyx.Partner_campaigns.Partner_campaignsRequestBuilder.Partner_campaignsRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
